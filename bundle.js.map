{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./node_modules/3d-view-controls/camera.js","webpack:///./node_modules/3d-view/view.js","webpack:///./node_modules/binary-search-bounds/search-bounds.js","webpack:///./node_modules/cubic-hermite/hermite.js","webpack:///./node_modules/filtered-vector/fvec.js","webpack:///./node_modules/gl-mat4/clone.js","webpack:///./node_modules/gl-mat4/create.js","webpack:///./node_modules/gl-mat4/determinant.js","webpack:///./node_modules/gl-mat4/fromQuat.js","webpack:///./node_modules/gl-mat4/fromRotationTranslation.js","webpack:///./node_modules/gl-mat4/identity.js","webpack:///./node_modules/gl-mat4/invert.js","webpack:///./node_modules/gl-mat4/lookAt.js","webpack:///./node_modules/gl-mat4/multiply.js","webpack:///./node_modules/gl-mat4/rotate.js","webpack:///./node_modules/gl-mat4/rotateX.js","webpack:///./node_modules/gl-mat4/rotateY.js","webpack:///./node_modules/gl-mat4/rotateZ.js","webpack:///./node_modules/gl-mat4/scale.js","webpack:///./node_modules/gl-mat4/translate.js","webpack:///./node_modules/gl-mat4/transpose.js","webpack:///./node_modules/gl-quat/slerp.js","webpack:///./node_modules/gl-vec3/cross.js","webpack:///./node_modules/gl-vec3/dot.js","webpack:///./node_modules/gl-vec3/length.js","webpack:///./node_modules/gl-vec3/lerp.js","webpack:///./node_modules/gl-vec3/normalize.js","webpack:///./node_modules/has-passive-events/index.js","webpack:///./node_modules/is-browser/client.js","webpack:///./node_modules/mat4-decompose/index.js","webpack:///./node_modules/mat4-decompose/normalize.js","webpack:///./node_modules/mat4-interpolate/index.js","webpack:///./node_modules/mat4-recompose/index.js","webpack:///./node_modules/matrix-camera-controller/matrix.js","webpack:///./node_modules/mouse-change/mouse-listen.js","webpack:///./node_modules/mouse-event-offset/index.js","webpack:///./node_modules/mouse-event/mouse.js","webpack:///./node_modules/mouse-wheel/wheel.js","webpack:///./node_modules/orbit-camera-controller/lib/quatFromFrame.js","webpack:///./node_modules/orbit-camera-controller/orbit.js","webpack:///./node_modules/parse-unit/index.js","webpack:///./node_modules/quat-slerp/index.js","webpack:///./node_modules/right-now/browser.js","webpack:///./node_modules/stats-js/build/stats.min.js","webpack:///./node_modules/to-px/browser.js","webpack:///./node_modules/turntable-camera-controller/turntable.js","webpack:///./src/shaders/flat-frag.glsl","webpack:///./src/shaders/flat-vert.glsl","webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///./node_modules/gl-matrix/esm/common.js","webpack:///./src/globals.ts","webpack:///./node_modules/gl-matrix/esm/vec4.js","webpack:///./node_modules/gl-matrix/esm/vec3.js","webpack:///./node_modules/gl-matrix/esm/mat4.js","webpack:///./src/rendering/gl/OpenGLRenderer.ts","webpack:///./src/Camera.ts","webpack:///./src/rendering/gl/ShaderProgram.ts","webpack:///./src/main.ts","webpack:///./src/geometry/Square.ts","webpack:///./src/rendering/gl/Drawable.ts"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = createCamera\r\n\r\nvar now         = require('right-now')\r\nvar createView  = require('3d-view')\r\nvar mouseChange = require('mouse-change')\r\nvar mouseWheel  = require('mouse-wheel')\r\nvar mouseOffset = require('mouse-event-offset')\r\nvar hasPassive  = require('has-passive-events')\r\n\r\nfunction createCamera(element, options) {\r\n  element = element || document.body\r\n  options = options || {}\r\n\r\n  var limits  = [ 0.01, Infinity ]\r\n  if('distanceLimits' in options) {\r\n    limits[0] = options.distanceLimits[0]\r\n    limits[1] = options.distanceLimits[1]\r\n  }\r\n  if('zoomMin' in options) {\r\n    limits[0] = options.zoomMin\r\n  }\r\n  if('zoomMax' in options) {\r\n    limits[1] = options.zoomMax\r\n  }\r\n\r\n  var view = createView({\r\n    center: options.center || [0,0,0],\r\n    up:     options.up     || [0,1,0],\r\n    eye:    options.eye    || [0,0,10],\r\n    mode:   options.mode   || 'orbit',\r\n    distanceLimits: limits\r\n  })\r\n\r\n  var pmatrix = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n  var distance = 0.0\r\n  var width   = element.clientWidth\r\n  var height  = element.clientHeight\r\n\r\n  var camera = {\r\n    view:               view,\r\n    element:            element,\r\n    delay:              options.delay          || 16,\r\n    rotateSpeed:        options.rotateSpeed    || 1,\r\n    zoomSpeed:          options.zoomSpeed      || 1,\r\n    translateSpeed:     options.translateSpeed || 1,\r\n    flipX:              !!options.flipX,\r\n    flipY:              !!options.flipY,\r\n    modes:              view.modes,\r\n    tick: function() {\r\n      var t = now()\r\n      var delay = this.delay\r\n      view.idle(t-delay)\r\n      view.flush(t-(100+delay*2))\r\n      var ctime = t - 2 * delay\r\n      view.recalcMatrix(ctime)\r\n      var allEqual = true\r\n      var matrix = view.computedMatrix\r\n      for(var i=0; i<16; ++i) {\r\n        allEqual = allEqual && (pmatrix[i] === matrix[i])\r\n        pmatrix[i] = matrix[i]\r\n      }\r\n      var sizeChanged =\r\n          element.clientWidth === width &&\r\n          element.clientHeight === height\r\n      width  = element.clientWidth\r\n      height = element.clientHeight\r\n      if(allEqual) {\r\n        return !sizeChanged\r\n      }\r\n      distance = Math.exp(view.computedRadius[0])\r\n      return true\r\n    },\r\n    lookAt: function(center, eye, up) {\r\n      view.lookAt(view.lastT(), center, eye, up)\r\n    },\r\n    rotate: function(pitch, yaw, roll) {\r\n      view.rotate(view.lastT(), pitch, yaw, roll)\r\n    },\r\n    pan: function(dx, dy, dz) {\r\n      view.pan(view.lastT(), dx, dy, dz)\r\n    },\r\n    translate: function(dx, dy, dz) {\r\n      view.translate(view.lastT(), dx, dy, dz)\r\n    }\r\n  }\r\n\r\n  Object.defineProperties(camera, {\r\n    matrix: {\r\n      get: function() {\r\n        return view.computedMatrix\r\n      },\r\n      set: function(mat) {\r\n        view.setMatrix(view.lastT(), mat)\r\n        return view.computedMatrix\r\n      },\r\n      enumerable: true\r\n    },\r\n    mode: {\r\n      get: function() {\r\n        return view.getMode()\r\n      },\r\n      set: function(mode) {\r\n        view.setMode(mode)\r\n        return view.getMode()\r\n      },\r\n      enumerable: true\r\n    },\r\n    center: {\r\n      get: function() {\r\n        return view.computedCenter\r\n      },\r\n      set: function(ncenter) {\r\n        view.lookAt(view.lastT(), ncenter)\r\n        return view.computedCenter\r\n      },\r\n      enumerable: true\r\n    },\r\n    eye: {\r\n      get: function() {\r\n        return view.computedEye\r\n      },\r\n      set: function(neye) {\r\n        view.lookAt(view.lastT(), null, neye)\r\n        return view.computedEye\r\n      },\r\n      enumerable: true\r\n    },\r\n    up: {\r\n      get: function() {\r\n        return view.computedUp\r\n      },\r\n      set: function(nup) {\r\n        view.lookAt(view.lastT(), null, null, nup)\r\n        return view.computedUp\r\n      },\r\n      enumerable: true\r\n    },\r\n    distance: {\r\n      get: function() {\r\n        return distance\r\n      },\r\n      set: function(d) {\r\n        view.setDistance(view.lastT(), d)\r\n        return d\r\n      },\r\n      enumerable: true\r\n    },\r\n    distanceLimits: {\r\n      get: function() {\r\n        return view.getDistanceLimits(limits)\r\n      },\r\n      set: function(v) {\r\n        view.setDistanceLimits(v)\r\n        return v\r\n      },\r\n      enumerable: true\r\n    }\r\n  })\r\n\r\n  element.addEventListener('contextmenu', function(ev) {\r\n    ev.preventDefault()\r\n    return false\r\n  })\r\n\r\n  var lastX = 0, lastY = 0, lastMods = {shift: false, control: false, alt: false, meta: false}\r\n  mouseChange(element, handleInteraction)\r\n\r\n  //enable simple touch interactions\r\n  element.addEventListener('touchstart', function (ev) {\r\n    var xy = mouseOffset(ev.changedTouches[0], element)\r\n    handleInteraction(0, xy[0], xy[1], lastMods)\r\n    handleInteraction(1, xy[0], xy[1], lastMods)\r\n\r\n    ev.preventDefault()\r\n  }, hasPassive ? {passive: false} : false)\r\n\r\n  element.addEventListener('touchmove', function (ev) {\r\n    var xy = mouseOffset(ev.changedTouches[0], element)\r\n    handleInteraction(1, xy[0], xy[1], lastMods)\r\n\r\n    ev.preventDefault()\r\n  }, hasPassive ? {passive: false} : false)\r\n\r\n  element.addEventListener('touchend', function (ev) {\r\n    var xy = mouseOffset(ev.changedTouches[0], element)\r\n    handleInteraction(0, lastX, lastY, lastMods)\r\n\r\n    ev.preventDefault()\r\n  }, hasPassive ? {passive: false} : false)\r\n\r\n  function handleInteraction (buttons, x, y, mods) {\r\n    var scale = 1.0 / element.clientHeight\r\n    var dx    = scale * (x - lastX)\r\n    var dy    = scale * (y - lastY)\r\n\r\n    var flipX = camera.flipX ? 1 : -1\r\n    var flipY = camera.flipY ? 1 : -1\r\n\r\n    var drot  = Math.PI * camera.rotateSpeed\r\n\r\n    var t = now()\r\n\r\n    if(buttons & 1) {\r\n      if(mods.shift) {\r\n        view.rotate(t, 0, 0, -dx * drot)\r\n      } else {\r\n        view.rotate(t, flipX * drot * dx, -flipY * drot * dy, 0)\r\n      }\r\n    } else if(buttons & 2) {\r\n      view.pan(t, -camera.translateSpeed * dx * distance, camera.translateSpeed * dy * distance, 0)\r\n    } else if(buttons & 4) {\r\n      var kzoom = camera.zoomSpeed * dy / window.innerHeight * (t - view.lastT()) * 50.0\r\n      view.pan(t, 0, 0, distance * (Math.exp(kzoom) - 1))\r\n    }\r\n\r\n    lastX = x\r\n    lastY = y\r\n    lastMods = mods\r\n  }\r\n\r\n  mouseWheel(element, function(dx, dy, dz) {\r\n    var flipX = camera.flipX ? 1 : -1\r\n    var flipY = camera.flipY ? 1 : -1\r\n    var t = now()\r\n    if(Math.abs(dx) > Math.abs(dy)) {\r\n      view.rotate(t, 0, 0, -dx * flipX * Math.PI * camera.rotateSpeed / window.innerWidth)\r\n    } else {\r\n      var kzoom = camera.zoomSpeed * flipY * dy / window.innerHeight * (t - view.lastT()) / 100.0\r\n      view.pan(t, 0, 0, distance * (Math.exp(kzoom) - 1))\r\n    }\r\n  }, true)\r\n\r\n  return camera\r\n}\r\n","'use strict'\n\nmodule.exports = createViewController\n\nvar createTurntable = require('turntable-camera-controller')\nvar createOrbit     = require('orbit-camera-controller')\nvar createMatrix    = require('matrix-camera-controller')\n\nfunction ViewController(controllers, mode) {\n  this._controllerNames = Object.keys(controllers)\n  this._controllerList = this._controllerNames.map(function(n) {\n    return controllers[n]\n  })\n  this._mode   = mode\n  this._active = controllers[mode]\n  if(!this._active) {\n    this._mode   = 'turntable'\n    this._active = controllers.turntable\n  }\n  this.modes = this._controllerNames\n  this.computedMatrix = this._active.computedMatrix\n  this.computedEye    = this._active.computedEye\n  this.computedUp     = this._active.computedUp\n  this.computedCenter = this._active.computedCenter\n  this.computedRadius = this._active.computedRadius\n}\n\nvar proto = ViewController.prototype\n\nproto.flush = function(a0) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].flush(a0)\n  }\n}\nproto.idle = function(a0) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].idle(a0)\n  }\n}\nproto.lookAt = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].lookAt(a0, a1, a2, a3)\n  }\n}\nproto.rotate = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].rotate(a0, a1, a2, a3)\n  }\n}\nproto.pan = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].pan(a0, a1, a2, a3)\n  }\n}\nproto.translate = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].translate(a0, a1, a2, a3)\n  }\n}\nproto.setMatrix = function(a0, a1) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].setMatrix(a0, a1)\n  }\n}\nproto.setDistanceLimits = function(a0, a1) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].setDistanceLimits(a0, a1)\n  }\n}\nproto.setDistance = function(a0, a1) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].setDistance(a0, a1)\n  }\n}\n\nproto.recalcMatrix = function(t) {\n  this._active.recalcMatrix(t)\n}\n\nproto.getDistance = function(t) {\n  return this._active.getDistance(t)\n}\nproto.getDistanceLimits = function(out) {\n  return this._active.getDistanceLimits(out)\n}\n\nproto.lastT = function() {\n  return this._active.lastT()\n}\n\nproto.setMode = function(mode) {\n  if(mode === this._mode) {\n    return\n  }\n  var idx = this._controllerNames.indexOf(mode)\n  if(idx < 0) {\n    return\n  }\n  var prev  = this._active\n  var next  = this._controllerList[idx]\n  var lastT = Math.max(prev.lastT(), next.lastT())\n\n  prev.recalcMatrix(lastT)\n  next.setMatrix(lastT, prev.computedMatrix)\n\n  this._active = next\n  this._mode   = mode\n\n  //Update matrix properties\n  this.computedMatrix = this._active.computedMatrix\n  this.computedEye    = this._active.computedEye\n  this.computedUp     = this._active.computedUp\n  this.computedCenter = this._active.computedCenter\n  this.computedRadius = this._active.computedRadius\n}\n\nproto.getMode = function() {\n  return this._mode\n}\n\nfunction createViewController(options) {\n  options = options || {}\n\n  var eye       = options.eye    || [0,0,1]\n  var center    = options.center || [0,0,0]\n  var up        = options.up     || [0,1,0]\n  var limits    = options.distanceLimits || [0, Infinity]\n  var mode      = options.mode   || 'turntable'\n\n  var turntable = createTurntable()\n  var orbit     = createOrbit()\n  var matrix    = createMatrix()\n\n  turntable.setDistanceLimits(limits[0], limits[1])\n  turntable.lookAt(0, eye, center, up)\n  orbit.setDistanceLimits(limits[0], limits[1])\n  orbit.lookAt(0, eye, center, up)\n  matrix.setDistanceLimits(limits[0], limits[1])\n  matrix.lookAt(0, eye, center, up)\n\n  return new ViewController({\n    turntable: turntable,\n    orbit: orbit,\n    matrix: matrix\n  }, mode)\n}","\"use strict\"\n\n// (a, y, c, l, h) = (array, y[, cmp, lo, hi])\n\nfunction ge(a, y, c, l, h) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p >= 0) { i = m; h = m - 1 } else { l = m + 1 }\n  }\n  return i;\n};\n\nfunction gt(a, y, c, l, h) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p > 0) { i = m; h = m - 1 } else { l = m + 1 }\n  }\n  return i;\n};\n\nfunction lt(a, y, c, l, h) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p < 0) { i = m; l = m + 1 } else { h = m - 1 }\n  }\n  return i;\n};\n\nfunction le(a, y, c, l, h) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p <= 0) { i = m; l = m + 1 } else { h = m - 1 }\n  }\n  return i;\n};\n\nfunction eq(a, y, c, l, h) {\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p === 0) { return m }\n    if (p <= 0) { l = m + 1 } else { h = m - 1 }\n  }\n  return -1;\n};\n\nfunction norm(a, y, c, l, h, f) {\n  if (typeof c === 'function') {\n    return f(a, y, c, (l === undefined) ? 0 : l | 0, (h === undefined) ? a.length - 1 : h | 0);\n  }\n  return f(a, y, undefined, (c === undefined) ? 0 : c | 0, (l === undefined) ? a.length - 1 : l | 0);\n}\n\nmodule.exports = {\n  ge: function(a, y, c, l, h) { return norm(a, y, c, l, h, ge)},\n  gt: function(a, y, c, l, h) { return norm(a, y, c, l, h, gt)},\n  lt: function(a, y, c, l, h) { return norm(a, y, c, l, h, lt)},\n  le: function(a, y, c, l, h) { return norm(a, y, c, l, h, le)},\n  eq: function(a, y, c, l, h) { return norm(a, y, c, l, h, eq)}\n}\n","\"use strict\"\n\nfunction dcubicHermite(p0, v0, p1, v1, t, f) {\n  var dh00 = 6*t*t-6*t,\n      dh10 = 3*t*t-4*t + 1,\n      dh01 = -6*t*t+6*t,\n      dh11 = 3*t*t-2*t\n  if(p0.length) {\n    if(!f) {\n      f = new Array(p0.length)\n    }\n    for(var i=p0.length-1; i>=0; --i) {\n      f[i] = dh00*p0[i] + dh10*v0[i] + dh01*p1[i] + dh11*v1[i]\n    }\n    return f\n  }\n  return dh00*p0 + dh10*v0 + dh01*p1[i] + dh11*v1\n}\n\nfunction cubicHermite(p0, v0, p1, v1, t, f) {\n  var ti  = (t-1), t2 = t*t, ti2 = ti*ti,\n      h00 = (1+2*t)*ti2,\n      h10 = t*ti2,\n      h01 = t2*(3-2*t),\n      h11 = t2*ti\n  if(p0.length) {\n    if(!f) {\n      f = new Array(p0.length)\n    }\n    for(var i=p0.length-1; i>=0; --i) {\n      f[i] = h00*p0[i] + h10*v0[i] + h01*p1[i] + h11*v1[i]\n    }\n    return f\n  }\n  return h00*p0 + h10*v0 + h01*p1 + h11*v1\n}\n\nmodule.exports = cubicHermite\nmodule.exports.derivative = dcubicHermite","'use strict'\n\nmodule.exports = createFilteredVector\n\nvar cubicHermite = require('cubic-hermite')\nvar bsearch = require('binary-search-bounds')\n\nfunction clamp(lo, hi, x) {\n  return Math.min(hi, Math.max(lo, x))\n}\n\nfunction FilteredVector(state0, velocity0, t0) {\n  this.dimension  = state0.length\n  this.bounds     = [ new Array(this.dimension), new Array(this.dimension) ]\n  for(var i=0; i<this.dimension; ++i) {\n    this.bounds[0][i] = -Infinity\n    this.bounds[1][i] = Infinity\n  }\n  this._state     = state0.slice().reverse()\n  this._velocity  = velocity0.slice().reverse()\n  this._time      = [ t0 ]\n  this._scratch   = [ state0.slice(), state0.slice(), state0.slice(), state0.slice(), state0.slice() ]\n}\n\nvar proto = FilteredVector.prototype\n\nproto.flush = function(t) {\n  var idx = bsearch.gt(this._time, t) - 1\n  if(idx <= 0) {\n    return\n  }\n  this._time.splice(0, idx)\n  this._state.splice(0, idx * this.dimension)\n  this._velocity.splice(0, idx * this.dimension)\n}\n\nproto.curve = function(t) {\n  var time      = this._time\n  var n         = time.length\n  var idx       = bsearch.le(time, t)\n  var result    = this._scratch[0]\n  var state     = this._state\n  var velocity  = this._velocity\n  var d         = this.dimension\n  var bounds    = this.bounds\n  if(idx < 0) {\n    var ptr = d-1\n    for(var i=0; i<d; ++i, --ptr) {\n      result[i] = state[ptr]\n    }\n  } else if(idx >= n-1) {\n    var ptr = state.length-1\n    var tf = t - time[n-1]\n    for(var i=0; i<d; ++i, --ptr) {\n      result[i] = state[ptr] + tf * velocity[ptr]\n    }\n  } else {\n    var ptr = d * (idx+1) - 1\n    var t0  = time[idx]\n    var t1  = time[idx+1]\n    var dt  = (t1 - t0) || 1.0\n    var x0  = this._scratch[1]\n    var x1  = this._scratch[2]\n    var v0  = this._scratch[3]\n    var v1  = this._scratch[4]\n    var steady = true\n    for(var i=0; i<d; ++i, --ptr) {\n      x0[i] = state[ptr]\n      v0[i] = velocity[ptr] * dt\n      x1[i] = state[ptr+d]\n      v1[i] = velocity[ptr+d] * dt\n      steady = steady && (x0[i] === x1[i] && v0[i] === v1[i] && v0[i] === 0.0)\n    }\n    if(steady) {\n      for(var i=0; i<d; ++i) {\n        result[i] = x0[i]\n      }\n    } else {\n      cubicHermite(x0, v0, x1, v1, (t-t0)/dt, result)\n    }\n  }\n  var lo = bounds[0]\n  var hi = bounds[1]\n  for(var i=0; i<d; ++i) {\n    result[i] = clamp(lo[i], hi[i], result[i])\n  }\n  return result\n}\n\nproto.dcurve = function(t) {\n  var time     = this._time\n  var n        = time.length\n  var idx      = bsearch.le(time, t)\n  var result   = this._scratch[0]\n  var state    = this._state\n  var velocity = this._velocity\n  var d        = this.dimension\n  if(idx >= n-1) {\n    var ptr = state.length-1\n    var tf = t - time[n-1]\n    for(var i=0; i<d; ++i, --ptr) {\n      result[i] = velocity[ptr]\n    }\n  } else {\n    var ptr = d * (idx+1) - 1\n    var t0 = time[idx]\n    var t1 = time[idx+1]\n    var dt = (t1 - t0) || 1.0\n    var x0 = this._scratch[1]\n    var x1 = this._scratch[2]\n    var v0 = this._scratch[3]\n    var v1 = this._scratch[4]\n    var steady = true\n    for(var i=0; i<d; ++i, --ptr) {\n      x0[i] = state[ptr]\n      v0[i] = velocity[ptr] * dt\n      x1[i] = state[ptr+d]\n      v1[i] = velocity[ptr+d] * dt\n      steady = steady && (x0[i] === x1[i] && v0[i] === v1[i] && v0[i] === 0.0)\n    }\n    if(steady) {\n      for(var i=0; i<d; ++i) {\n        result[i] = 0.0\n      }\n    } else {\n      cubicHermite.derivative(x0, v0, x1, v1, (t-t0)/dt, result)\n      for(var i=0; i<d; ++i) {\n        result[i] /= dt\n      }\n    }\n  }\n  return result\n}\n\nproto.lastT = function() {\n  var time = this._time\n  return time[time.length-1]\n}\n\nproto.stable = function() {\n  var velocity = this._velocity\n  var ptr = velocity.length\n  for(var i=this.dimension-1; i>=0; --i) {\n    if(velocity[--ptr]) {\n      return false\n    }\n  }\n  return true\n}\n\nproto.jump = function(t) {\n  var t0 = this.lastT()\n  var d  = this.dimension\n  if(t < t0 || arguments.length !== d+1) {\n    return\n  }\n  var state     = this._state\n  var velocity  = this._velocity\n  var ptr       = state.length-this.dimension\n  var bounds    = this.bounds\n  var lo        = bounds[0]\n  var hi        = bounds[1]\n  this._time.push(t0, t)\n  for(var j=0; j<2; ++j) {\n    for(var i=0; i<d; ++i) {\n      state.push(state[ptr++])\n      velocity.push(0)\n    }\n  }\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    state.push(clamp(lo[i-1], hi[i-1], arguments[i]))\n    velocity.push(0)\n  }\n}\n\nproto.push = function(t) {\n  var t0 = this.lastT()\n  var d  = this.dimension\n  if(t < t0 || arguments.length !== d+1) {\n    return\n  }\n  var state     = this._state\n  var velocity  = this._velocity\n  var ptr       = state.length-this.dimension\n  var dt        = t - t0\n  var bounds    = this.bounds\n  var lo        = bounds[0]\n  var hi        = bounds[1]\n  var sf        = (dt > 1e-6) ? 1/dt : 0\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    var xc = clamp(lo[i-1], hi[i-1], arguments[i])\n    state.push(xc)\n    velocity.push((xc - state[ptr++]) * sf)\n  }\n}\n\nproto.set = function(t) {\n  var d = this.dimension\n  if(t < this.lastT() || arguments.length !== d+1) {\n    return\n  }\n  var state     = this._state\n  var velocity  = this._velocity\n  var bounds    = this.bounds\n  var lo        = bounds[0]\n  var hi        = bounds[1]\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    state.push(clamp(lo[i-1], hi[i-1], arguments[i]))\n    velocity.push(0)\n  }\n}\n\nproto.move = function(t) {\n  var t0 = this.lastT()\n  var d  = this.dimension\n  if(t <= t0 || arguments.length !== d+1) {\n    return\n  }\n  var state    = this._state\n  var velocity = this._velocity\n  var statePtr = state.length - this.dimension\n  var bounds   = this.bounds\n  var lo       = bounds[0]\n  var hi       = bounds[1]\n  var dt       = t - t0\n  var sf       = (dt > 1e-6) ? 1/dt : 0.0\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    var dx = arguments[i]\n    state.push(clamp(lo[i-1], hi[i-1], state[statePtr++] + dx))\n    velocity.push(dx * sf)\n  }\n}\n\nproto.idle = function(t) {\n  var t0 = this.lastT()\n  if(t < t0) {\n    return\n  }\n  var d        = this.dimension\n  var state    = this._state\n  var velocity = this._velocity\n  var statePtr = state.length-d\n  var bounds   = this.bounds\n  var lo       = bounds[0]\n  var hi       = bounds[1]\n  var dt       = t - t0\n  this._time.push(t)\n  for(var i=d-1; i>=0; --i) {\n    state.push(clamp(lo[i], hi[i], state[statePtr] + dt * velocity[statePtr]))\n    velocity.push(0)\n    statePtr += 1\n  }\n}\n\nfunction getZero(d) {\n  var result = new Array(d)\n  for(var i=0; i<d; ++i) {\n    result[i] = 0.0\n  }\n  return result\n}\n\nfunction createFilteredVector(initState, initVelocity, initTime) {\n  switch(arguments.length) {\n    case 0:\n      return new FilteredVector([0], [0], 0)\n    case 1:\n      if(typeof initState === 'number') {\n        var zero = getZero(initState)\n        return new FilteredVector(zero, zero, 0)\n      } else {\n        return new FilteredVector(initState, getZero(initState.length), 0)\n      }\n    case 2:\n      if(typeof initVelocity === 'number') {\n        var zero = getZero(initState.length)\n        return new FilteredVector(initState, zero, +initVelocity)\n      } else {\n        initTime = 0\n      }\n    case 3:\n      if(initState.length !== initVelocity.length) {\n        throw new Error('state and velocity lengths must match')\n      }\n      return new FilteredVector(initState, initVelocity, initTime)\n  }\n}\n","module.exports = clone;\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nfunction clone(a) {\n    var out = new Float32Array(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = create;\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n    var out = new Float32Array(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = determinant;\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};","module.exports = fromQuat;\n\n/**\n * Creates a matrix from a quaternion rotation.\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @returns {mat4} out\n */\nfunction fromQuat(out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};","module.exports = fromRotationTranslation;\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslation(out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};","module.exports = identity;\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = invert;\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};","var identity = require('./identity');\n\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < 0.000001 &&\n        Math.abs(eyey - centery) < 0.000001 &&\n        Math.abs(eyez - centerz) < 0.000001) {\n        return identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};","module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};","module.exports = rotate;\n\n/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction rotate(out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < 0.000001) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};","module.exports = rotateX;\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateX(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};","module.exports = rotateY;\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateY(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};","module.exports = rotateZ;\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateZ(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};","module.exports = scale;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = translate;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nfunction translate(out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};","module.exports = transpose;\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};","module.exports = slerp\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nfunction slerp (out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bx = b[0], by = b[1], bz = b[2], bw = b[3]\n\n  var omega, cosom, sinom, scale0, scale1\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom\n    bx = -bx\n    by = -by\n    bz = -bz\n    bw = -bw\n  }\n  // calculate coefficients\n  if ((1.0 - cosom) > 0.000001) {\n    // standard case (slerp)\n    omega = Math.acos(cosom)\n    sinom = Math.sin(omega)\n    scale0 = Math.sin((1.0 - t) * omega) / sinom\n    scale1 = Math.sin(t * omega) / sinom\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t\n    scale1 = t\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx\n  out[1] = scale0 * ay + scale1 * by\n  out[2] = scale0 * az + scale1 * bz\n  out[3] = scale0 * aw + scale1 * bw\n\n  return out\n}\n","module.exports = cross;\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2]\n\n    out[0] = ay * bz - az * by\n    out[1] = az * bx - ax * bz\n    out[2] = ax * by - ay * bx\n    return out\n}","module.exports = dot;\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n}","module.exports = length;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    return Math.sqrt(x*x + y*y + z*z)\n}","module.exports = lerp;\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2]\n    out[0] = ax + t * (b[0] - ax)\n    out[1] = ay + t * (b[1] - ay)\n    out[2] = az + t * (b[2] - az)\n    return out\n}","module.exports = normalize;\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    var len = x*x + y*y + z*z\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n        out[2] = a[2] * len\n    }\n    return out\n}","'use strict'\r\n\r\nvar isBrowser = require('is-browser')\r\n\r\nfunction detect() {\r\n\tvar supported = false\r\n\r\n\ttry {\r\n\t\tvar opts = Object.defineProperty({}, 'passive', {\r\n\t\t\tget: function() {\r\n\t\t\t\tsupported = true\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\twindow.addEventListener('test', null, opts)\r\n\t\twindow.removeEventListener('test', null, opts)\r\n\t} catch(e) {\r\n\t\tsupported = false\r\n\t}\r\n\r\n\treturn supported\r\n}\r\n\r\nmodule.exports = isBrowser && detect()\r\n","module.exports = true;","/*jshint unused:true*/\n/*\nInput:  matrix      ; a 4x4 matrix\nOutput: translation ; a 3 component vector\n        scale       ; a 3 component vector\n        skew        ; skew factors XY,XZ,YZ represented as a 3 component vector\n        perspective ; a 4 component vector\n        quaternion  ; a 4 component vector\nReturns false if the matrix cannot be decomposed, true if it can\n\n\nReferences:\nhttps://github.com/kamicane/matrix3d/blob/master/lib/Matrix3d.js\nhttps://github.com/ChromiumWebApps/chromium/blob/master/ui/gfx/transform_util.cc\nhttp://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix\n*/\n\nvar normalize = require('./normalize')\n\nvar create = require('gl-mat4/create')\nvar clone = require('gl-mat4/clone')\nvar determinant = require('gl-mat4/determinant')\nvar invert = require('gl-mat4/invert')\nvar transpose = require('gl-mat4/transpose')\nvar vec3 = {\n    length: require('gl-vec3/length'),\n    normalize: require('gl-vec3/normalize'),\n    dot: require('gl-vec3/dot'),\n    cross: require('gl-vec3/cross')\n}\n\nvar tmp = create()\nvar perspectiveMatrix = create()\nvar tmpVec4 = [0, 0, 0, 0]\nvar row = [ [0,0,0], [0,0,0], [0,0,0] ]\nvar pdum3 = [0,0,0]\n\nmodule.exports = function decomposeMat4(matrix, translation, scale, skew, perspective, quaternion) {\n    if (!translation) translation = [0,0,0]\n    if (!scale) scale = [0,0,0]\n    if (!skew) skew = [0,0,0]\n    if (!perspective) perspective = [0,0,0,1]\n    if (!quaternion) quaternion = [0,0,0,1]\n\n    //normalize, if not possible then bail out early\n    if (!normalize(tmp, matrix))\n        return false\n\n    // perspectiveMatrix is used to solve for perspective, but it also provides\n    // an easy way to test for singularity of the upper 3x3 component.\n    clone(perspectiveMatrix, tmp)\n\n    perspectiveMatrix[3] = 0\n    perspectiveMatrix[7] = 0\n    perspectiveMatrix[11] = 0\n    perspectiveMatrix[15] = 1\n\n    // If the perspectiveMatrix is not invertible, we are also unable to\n    // decompose, so we'll bail early. Constant taken from SkMatrix44::invert.\n    if (Math.abs(determinant(perspectiveMatrix) < 1e-8))\n        return false\n\n    var a03 = tmp[3], a13 = tmp[7], a23 = tmp[11],\n            a30 = tmp[12], a31 = tmp[13], a32 = tmp[14], a33 = tmp[15]\n\n    // First, isolate perspective.\n    if (a03 !== 0 || a13 !== 0 || a23 !== 0) {\n        tmpVec4[0] = a03\n        tmpVec4[1] = a13\n        tmpVec4[2] = a23\n        tmpVec4[3] = a33\n\n        // Solve the equation by inverting perspectiveMatrix and multiplying\n        // rightHandSide by the inverse.\n        // resuing the perspectiveMatrix here since it's no longer needed\n        var ret = invert(perspectiveMatrix, perspectiveMatrix)\n        if (!ret) return false\n        transpose(perspectiveMatrix, perspectiveMatrix)\n\n        //multiply by transposed inverse perspective matrix, into perspective vec4\n        vec4multMat4(perspective, tmpVec4, perspectiveMatrix)\n    } else { \n        //no perspective\n        perspective[0] = perspective[1] = perspective[2] = 0\n        perspective[3] = 1\n    }\n\n    // Next take care of translation\n    translation[0] = a30\n    translation[1] = a31\n    translation[2] = a32\n\n    // Now get scale and shear. 'row' is a 3 element array of 3 component vectors\n    mat3from4(row, tmp)\n\n    // Compute X scale factor and normalize first row.\n    scale[0] = vec3.length(row[0])\n    vec3.normalize(row[0], row[0])\n\n    // Compute XY shear factor and make 2nd row orthogonal to 1st.\n    skew[0] = vec3.dot(row[0], row[1])\n    combine(row[1], row[1], row[0], 1.0, -skew[0])\n\n    // Now, compute Y scale and normalize 2nd row.\n    scale[1] = vec3.length(row[1])\n    vec3.normalize(row[1], row[1])\n    skew[0] /= scale[1]\n\n    // Compute XZ and YZ shears, orthogonalize 3rd row\n    skew[1] = vec3.dot(row[0], row[2])\n    combine(row[2], row[2], row[0], 1.0, -skew[1])\n    skew[2] = vec3.dot(row[1], row[2])\n    combine(row[2], row[2], row[1], 1.0, -skew[2])\n\n    // Next, get Z scale and normalize 3rd row.\n    scale[2] = vec3.length(row[2])\n    vec3.normalize(row[2], row[2])\n    skew[1] /= scale[2]\n    skew[2] /= scale[2]\n\n\n    // At this point, the matrix (in rows) is orthonormal.\n    // Check for a coordinate system flip.  If the determinant\n    // is -1, then negate the matrix and the scaling factors.\n    vec3.cross(pdum3, row[1], row[2])\n    if (vec3.dot(row[0], pdum3) < 0) {\n        for (var i = 0; i < 3; i++) {\n            scale[i] *= -1;\n            row[i][0] *= -1\n            row[i][1] *= -1\n            row[i][2] *= -1\n        }\n    }\n\n    // Now, get the rotations out\n    quaternion[0] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0))\n    quaternion[1] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0))\n    quaternion[2] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0))\n    quaternion[3] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0))\n\n    if (row[2][1] > row[1][2])\n        quaternion[0] = -quaternion[0]\n    if (row[0][2] > row[2][0])\n        quaternion[1] = -quaternion[1]\n    if (row[1][0] > row[0][1])\n        quaternion[2] = -quaternion[2]\n    return true\n}\n\n//will be replaced by gl-vec4 eventually\nfunction vec4multMat4(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n}\n\n//gets upper-left of a 4x4 matrix into a 3x3 of vectors\nfunction mat3from4(out, mat4x4) {\n    out[0][0] = mat4x4[0]\n    out[0][1] = mat4x4[1]\n    out[0][2] = mat4x4[2]\n    \n    out[1][0] = mat4x4[4]\n    out[1][1] = mat4x4[5]\n    out[1][2] = mat4x4[6]\n\n    out[2][0] = mat4x4[8]\n    out[2][1] = mat4x4[9]\n    out[2][2] = mat4x4[10]\n}\n\nfunction combine(out, a, b, scale1, scale2) {\n    out[0] = a[0] * scale1 + b[0] * scale2\n    out[1] = a[1] * scale1 + b[1] * scale2\n    out[2] = a[2] * scale1 + b[2] * scale2\n}","module.exports = function normalize(out, mat) {\n    var m44 = mat[15]\n    // Cannot normalize.\n    if (m44 === 0) \n        return false\n    var scale = 1 / m44\n    for (var i=0; i<16; i++)\n        out[i] = mat[i] * scale\n    return true\n}","var lerp = require('gl-vec3/lerp')\n\nvar recompose = require('mat4-recompose')\nvar decompose = require('mat4-decompose')\nvar determinant = require('gl-mat4/determinant')\nvar slerp = require('quat-slerp')\n\nvar state0 = state()\nvar state1 = state()\nvar tmp = state()\n\nmodule.exports = interpolate\nfunction interpolate(out, start, end, alpha) {\n    if (determinant(start) === 0 || determinant(end) === 0)\n        return false\n\n    //decompose the start and end matrices into individual components\n    var r0 = decompose(start, state0.translate, state0.scale, state0.skew, state0.perspective, state0.quaternion)\n    var r1 = decompose(end, state1.translate, state1.scale, state1.skew, state1.perspective, state1.quaternion)\n    if (!r0 || !r1)\n        return false    \n\n\n    //now lerp/slerp the start and end components into a temporary     lerp(tmptranslate, state0.translate, state1.translate, alpha)\n    lerp(tmp.translate, state0.translate, state1.translate, alpha)\n    lerp(tmp.skew, state0.skew, state1.skew, alpha)\n    lerp(tmp.scale, state0.scale, state1.scale, alpha)\n    lerp(tmp.perspective, state0.perspective, state1.perspective, alpha)\n    slerp(tmp.quaternion, state0.quaternion, state1.quaternion, alpha)\n\n    //and recompose into our 'out' matrix\n    recompose(out, tmp.translate, tmp.scale, tmp.skew, tmp.perspective, tmp.quaternion)\n    return true\n}\n\nfunction state() {\n    return {\n        translate: vec3(),\n        scale: vec3(1),\n        skew: vec3(),\n        perspective: vec4(),\n        quaternion: vec4()\n    }\n}\n\nfunction vec3(n) {\n    return [n||0,n||0,n||0]\n}\n\nfunction vec4() {\n    return [0,0,0,1]\n}","/*\nInput:  translation ; a 3 component vector\n        scale       ; a 3 component vector\n        skew        ; skew factors XY,XZ,YZ represented as a 3 component vector\n        perspective ; a 4 component vector\n        quaternion  ; a 4 component vector\nOutput: matrix      ; a 4x4 matrix\n\nFrom: http://www.w3.org/TR/css3-transforms/#recomposing-to-a-3d-matrix\n*/\n\nvar mat4 = {\n    identity: require('gl-mat4/identity'),\n    translate: require('gl-mat4/translate'),\n    multiply: require('gl-mat4/multiply'),\n    create: require('gl-mat4/create'),\n    scale: require('gl-mat4/scale'),\n    fromRotationTranslation: require('gl-mat4/fromRotationTranslation')\n}\n\nvar rotationMatrix = mat4.create()\nvar temp = mat4.create()\n\nmodule.exports = function recomposeMat4(matrix, translation, scale, skew, perspective, quaternion) {\n    mat4.identity(matrix)\n\n    //apply translation & rotation\n    mat4.fromRotationTranslation(matrix, quaternion, translation)\n\n    //apply perspective\n    matrix[3] = perspective[0]\n    matrix[7] = perspective[1]\n    matrix[11] = perspective[2]\n    matrix[15] = perspective[3]\n        \n    // apply skew\n    // temp is a identity 4x4 matrix initially\n    mat4.identity(temp)\n\n    if (skew[2] !== 0) {\n        temp[9] = skew[2]\n        mat4.multiply(matrix, matrix, temp)\n    }\n\n    if (skew[1] !== 0) {\n        temp[9] = 0\n        temp[8] = skew[1]\n        mat4.multiply(matrix, matrix, temp)\n    }\n\n    if (skew[0] !== 0) {\n        temp[8] = 0\n        temp[4] = skew[0]\n        mat4.multiply(matrix, matrix, temp)\n    }\n\n    //apply scale\n    mat4.scale(matrix, matrix, scale)\n    return matrix\n}","'use strict'\n\nvar bsearch   = require('binary-search-bounds')\nvar m4interp  = require('mat4-interpolate')\nvar invert44  = require('gl-mat4/invert')\nvar rotateX   = require('gl-mat4/rotateX')\nvar rotateY   = require('gl-mat4/rotateY')\nvar rotateZ   = require('gl-mat4/rotateZ')\nvar lookAt    = require('gl-mat4/lookAt')\nvar translate = require('gl-mat4/translate')\nvar scale     = require('gl-mat4/scale')\nvar normalize = require('gl-vec3/normalize')\n\nvar DEFAULT_CENTER = [0,0,0]\n\nmodule.exports = createMatrixCameraController\n\nfunction MatrixCameraController(initialMatrix) {\n  this._components    = initialMatrix.slice()\n  this._time          = [0]\n  this.prevMatrix     = initialMatrix.slice()\n  this.nextMatrix     = initialMatrix.slice()\n  this.computedMatrix = initialMatrix.slice()\n  this.computedInverse = initialMatrix.slice()\n  this.computedEye    = [0,0,0]\n  this.computedUp     = [0,0,0]\n  this.computedCenter = [0,0,0]\n  this.computedRadius = [0]\n  this._limits        = [-Infinity, Infinity]\n}\n\nvar proto = MatrixCameraController.prototype\n\nproto.recalcMatrix = function(t) {\n  var time = this._time\n  var tidx = bsearch.le(time, t)\n  var mat = this.computedMatrix\n  if(tidx < 0) {\n    return\n  }\n  var comps = this._components\n  if(tidx === time.length-1) {\n    var ptr = 16*tidx\n    for(var i=0; i<16; ++i) {\n      mat[i] = comps[ptr++]\n    }\n  } else {\n    var dt = (time[tidx+1] - time[tidx])\n    var ptr = 16*tidx\n    var prev = this.prevMatrix\n    var allEqual = true\n    for(var i=0; i<16; ++i) {\n      prev[i] = comps[ptr++]\n    }\n    var next = this.nextMatrix\n    for(var i=0; i<16; ++i) {\n      next[i] = comps[ptr++]\n      allEqual = allEqual && (prev[i] === next[i])\n    }\n    if(dt < 1e-6 || allEqual) {\n      for(var i=0; i<16; ++i) {\n        mat[i] = prev[i]\n      }\n    } else {\n      m4interp(mat, prev, next, (t - time[tidx])/dt)\n    }\n  }\n\n  var up = this.computedUp\n  up[0] = mat[1]\n  up[1] = mat[5]\n  up[2] = mat[9]\n  normalize(up, up)\n\n  var imat = this.computedInverse\n  invert44(imat, mat)\n  var eye = this.computedEye\n  var w = imat[15]\n  eye[0] = imat[12]/w\n  eye[1] = imat[13]/w\n  eye[2] = imat[14]/w\n\n  var center = this.computedCenter\n  var radius = Math.exp(this.computedRadius[0])\n  for(var i=0; i<3; ++i) {\n    center[i] = eye[i] - mat[2+4*i] * radius\n  }\n}\n\nproto.idle = function(t) {\n  if(t < this.lastT()) {\n    return\n  }\n  var mc = this._components\n  var ptr = mc.length-16\n  for(var i=0; i<16; ++i) {\n    mc.push(mc[ptr++])\n  }\n  this._time.push(t)\n}\n\nproto.flush = function(t) {\n  var idx = bsearch.gt(this._time, t) - 2\n  if(idx < 0) {\n    return\n  }\n  this._time.splice(0, idx)\n  this._components.splice(0, 16*idx)\n}\n\nproto.lastT = function() {\n  return this._time[this._time.length-1]\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n  eye    = eye || this.computedEye\n  center = center || DEFAULT_CENTER\n  up     = up || this.computedUp\n  this.setMatrix(t, lookAt(this.computedMatrix, eye, center, up))\n  var d2 = 0.0\n  for(var i=0; i<3; ++i) {\n    d2 += Math.pow(center[i] - eye[i], 2)\n  }\n  d2 = Math.log(Math.sqrt(d2))\n  this.computedRadius[0] = d2\n}\n\nproto.rotate = function(t, yaw, pitch, roll) {\n  this.recalcMatrix(t)\n  var mat = this.computedInverse\n  if(yaw)   rotateY(mat, mat, yaw)\n  if(pitch) rotateX(mat, mat, pitch)\n  if(roll)  rotateZ(mat, mat, roll)\n  this.setMatrix(t, invert44(this.computedMatrix, mat))\n}\n\nvar tvec = [0,0,0]\n\nproto.pan = function(t, dx, dy, dz) {\n  tvec[0] = -(dx || 0.0)\n  tvec[1] = -(dy || 0.0)\n  tvec[2] = -(dz || 0.0)\n  this.recalcMatrix(t)\n  var mat = this.computedInverse\n  translate(mat, mat, tvec)\n  this.setMatrix(t, invert44(mat, mat))\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  tvec[0] = dx || 0.0\n  tvec[1] = dy || 0.0\n  tvec[2] = dz || 0.0\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n  translate(mat, mat, tvec)\n  this.setMatrix(t, mat)\n}\n\nproto.setMatrix = function(t, mat) {\n  if(t < this.lastT()) {\n    return\n  }\n  this._time.push(t)\n  for(var i=0; i<16; ++i) {\n    this._components.push(mat[i])\n  }\n}\n\nproto.setDistance = function(t, d) {\n  this.computedRadius[0] = d\n}\n\nproto.setDistanceLimits = function(a,b) {\n  var lim = this._limits\n  lim[0] = a\n  lim[1] = b\n}\n\nproto.getDistanceLimits = function(out) {\n  var lim = this._limits\n  if(out) {\n    out[0] = lim[0]\n    out[1] = lim[1]\n    return out\n  }\n  return lim\n}\n\nfunction createMatrixCameraController(options) {\n  options = options || {}\n  var matrix = options.matrix || \n              [1,0,0,0,\n               0,1,0,0,\n               0,0,1,0,\n               0,0,0,1]\n  return new MatrixCameraController(matrix)\n}\n","'use strict'\n\nmodule.exports = mouseListen\n\nvar mouse = require('mouse-event')\n\nfunction mouseListen (element, callback) {\n  if (!callback) {\n    callback = element\n    element = window\n  }\n\n  var buttonState = 0\n  var x = 0\n  var y = 0\n  var mods = {\n    shift: false,\n    alt: false,\n    control: false,\n    meta: false\n  }\n  var attached = false\n\n  function updateMods (ev) {\n    var changed = false\n    if ('altKey' in ev) {\n      changed = changed || ev.altKey !== mods.alt\n      mods.alt = !!ev.altKey\n    }\n    if ('shiftKey' in ev) {\n      changed = changed || ev.shiftKey !== mods.shift\n      mods.shift = !!ev.shiftKey\n    }\n    if ('ctrlKey' in ev) {\n      changed = changed || ev.ctrlKey !== mods.control\n      mods.control = !!ev.ctrlKey\n    }\n    if ('metaKey' in ev) {\n      changed = changed || ev.metaKey !== mods.meta\n      mods.meta = !!ev.metaKey\n    }\n    return changed\n  }\n\n  function handleEvent (nextButtons, ev) {\n    var nextX = mouse.x(ev)\n    var nextY = mouse.y(ev)\n    if ('buttons' in ev) {\n      nextButtons = ev.buttons | 0\n    }\n    if (nextButtons !== buttonState ||\n      nextX !== x ||\n      nextY !== y ||\n      updateMods(ev)) {\n      buttonState = nextButtons | 0\n      x = nextX || 0\n      y = nextY || 0\n      callback && callback(buttonState, x, y, mods)\n    }\n  }\n\n  function clearState (ev) {\n    handleEvent(0, ev)\n  }\n\n  function handleBlur () {\n    if (buttonState ||\n      x ||\n      y ||\n      mods.shift ||\n      mods.alt ||\n      mods.meta ||\n      mods.control) {\n      x = y = 0\n      buttonState = 0\n      mods.shift = mods.alt = mods.control = mods.meta = false\n      callback && callback(0, 0, 0, mods)\n    }\n  }\n\n  function handleMods (ev) {\n    if (updateMods(ev)) {\n      callback && callback(buttonState, x, y, mods)\n    }\n  }\n\n  function handleMouseMove (ev) {\n    if (mouse.buttons(ev) === 0) {\n      handleEvent(0, ev)\n    } else {\n      handleEvent(buttonState, ev)\n    }\n  }\n\n  function handleMouseDown (ev) {\n    handleEvent(buttonState | mouse.buttons(ev), ev)\n  }\n\n  function handleMouseUp (ev) {\n    handleEvent(buttonState & ~mouse.buttons(ev), ev)\n  }\n\n  function attachListeners () {\n    if (attached) {\n      return\n    }\n    attached = true\n\n    element.addEventListener('mousemove', handleMouseMove)\n\n    element.addEventListener('mousedown', handleMouseDown)\n\n    element.addEventListener('mouseup', handleMouseUp)\n\n    element.addEventListener('mouseleave', clearState)\n    element.addEventListener('mouseenter', clearState)\n    element.addEventListener('mouseout', clearState)\n    element.addEventListener('mouseover', clearState)\n\n    element.addEventListener('blur', handleBlur)\n\n    element.addEventListener('keyup', handleMods)\n    element.addEventListener('keydown', handleMods)\n    element.addEventListener('keypress', handleMods)\n\n    if (element !== window) {\n      window.addEventListener('blur', handleBlur)\n\n      window.addEventListener('keyup', handleMods)\n      window.addEventListener('keydown', handleMods)\n      window.addEventListener('keypress', handleMods)\n    }\n  }\n\n  function detachListeners () {\n    if (!attached) {\n      return\n    }\n    attached = false\n\n    element.removeEventListener('mousemove', handleMouseMove)\n\n    element.removeEventListener('mousedown', handleMouseDown)\n\n    element.removeEventListener('mouseup', handleMouseUp)\n\n    element.removeEventListener('mouseleave', clearState)\n    element.removeEventListener('mouseenter', clearState)\n    element.removeEventListener('mouseout', clearState)\n    element.removeEventListener('mouseover', clearState)\n\n    element.removeEventListener('blur', handleBlur)\n\n    element.removeEventListener('keyup', handleMods)\n    element.removeEventListener('keydown', handleMods)\n    element.removeEventListener('keypress', handleMods)\n\n    if (element !== window) {\n      window.removeEventListener('blur', handleBlur)\n\n      window.removeEventListener('keyup', handleMods)\n      window.removeEventListener('keydown', handleMods)\n      window.removeEventListener('keypress', handleMods)\n    }\n  }\n\n  // Attach listeners\n  attachListeners()\n\n  var result = {\n    element: element\n  }\n\n  Object.defineProperties(result, {\n    enabled: {\n      get: function () { return attached },\n      set: function (f) {\n        if (f) {\n          attachListeners()\n        } else {\n          detachListeners()\n        }\n      },\n      enumerable: true\n    },\n    buttons: {\n      get: function () { return buttonState },\n      enumerable: true\n    },\n    x: {\n      get: function () { return x },\n      enumerable: true\n    },\n    y: {\n      get: function () { return y },\n      enumerable: true\n    },\n    mods: {\n      get: function () { return mods },\n      enumerable: true\n    }\n  })\n\n  return result\n}\n","var rootPosition = { left: 0, top: 0 }\n\nmodule.exports = mouseEventOffset\nfunction mouseEventOffset (ev, target, out) {\n  target = target || ev.currentTarget || ev.srcElement\n  if (!Array.isArray(out)) {\n    out = [ 0, 0 ]\n  }\n  var cx = ev.clientX || 0\n  var cy = ev.clientY || 0\n  var rect = getBoundingClientOffset(target)\n  out[0] = cx - rect.left\n  out[1] = cy - rect.top\n  return out\n}\n\nfunction getBoundingClientOffset (element) {\n  if (element === window ||\n      element === document ||\n      element === document.body) {\n    return rootPosition\n  } else {\n    return element.getBoundingClientRect()\n  }\n}\n","'use strict'\n\nfunction mouseButtons(ev) {\n  if(typeof ev === 'object') {\n    if('buttons' in ev) {\n      return ev.buttons\n    } else if('which' in ev) {\n      var b = ev.which\n      if(b === 2) {\n        return 4\n      } else if(b === 3) {\n        return 2\n      } else if(b > 0) {\n        return 1<<(b-1)\n      }\n    } else if('button' in ev) {\n      var b = ev.button\n      if(b === 1) {\n        return 4\n      } else if(b === 2) {\n        return 2\n      } else if(b >= 0) {\n        return 1<<b\n      }\n    }\n  }\n  return 0\n}\nexports.buttons = mouseButtons\n\nfunction mouseElement(ev) {\n  return ev.target || ev.srcElement || window\n}\nexports.element = mouseElement\n\nfunction mouseRelativeX(ev) {\n  if(typeof ev === 'object') {\n    if('offsetX' in ev) {\n      return ev.offsetX\n    }\n    var target = mouseElement(ev)\n    var bounds = target.getBoundingClientRect()\n    return ev.clientX - bounds.left\n  }\n  return 0\n}\nexports.x = mouseRelativeX\n\nfunction mouseRelativeY(ev) {\n  if(typeof ev === 'object') {\n    if('offsetY' in ev) {\n      return ev.offsetY\n    }\n    var target = mouseElement(ev)\n    var bounds = target.getBoundingClientRect()\n    return ev.clientY - bounds.top\n  }\n  return 0\n}\nexports.y = mouseRelativeY\n","'use strict'\n\nvar toPX = require('to-px')\n\nmodule.exports = mouseWheelListen\n\nfunction mouseWheelListen(element, callback, noScroll) {\n  if(typeof element === 'function') {\n    noScroll = !!callback\n    callback = element\n    element = window\n  }\n  var lineHeight = toPX('ex', element)\n  var listener = function(ev) {\n    if(noScroll) {\n      ev.preventDefault()\n    }\n    var dx = ev.deltaX || 0\n    var dy = ev.deltaY || 0\n    var dz = ev.deltaZ || 0\n    var mode = ev.deltaMode\n    var scale = 1\n    switch(mode) {\n      case 1:\n        scale = lineHeight\n      break\n      case 2:\n        scale = window.innerHeight\n      break\n    }\n    dx *= scale\n    dy *= scale\n    dz *= scale\n    if(dx || dy || dz) {\n      return callback(dx, dy, dz, ev)\n    }\n  }\n  element.addEventListener('wheel', listener)\n  return listener\n}\n","'use strict'\n\nmodule.exports = quatFromFrame\n\nfunction quatFromFrame(\n  out,\n  rx, ry, rz,\n  ux, uy, uz,\n  fx, fy, fz) {\n  var tr = rx + uy + fz\n  if(l > 0) {\n    var l = Math.sqrt(tr + 1.0)\n    out[0] = 0.5 * (uz - fy) / l\n    out[1] = 0.5 * (fx - rz) / l\n    out[2] = 0.5 * (ry - uy) / l\n    out[3] = 0.5 * l\n  } else {\n    var tf = Math.max(rx, uy, fz)\n    var l = Math.sqrt(2 * tf - tr + 1.0)\n    if(rx >= tf) {\n      //x y z  order\n      out[0] = 0.5 * l\n      out[1] = 0.5 * (ux + ry) / l\n      out[2] = 0.5 * (fx + rz) / l\n      out[3] = 0.5 * (uz - fy) / l\n    } else if(uy >= tf) {\n      //y z x  order\n      out[0] = 0.5 * (ry + ux) / l\n      out[1] = 0.5 * l\n      out[2] = 0.5 * (fy + uz) / l\n      out[3] = 0.5 * (fx - rz) / l\n    } else {\n      //z x y  order\n      out[0] = 0.5 * (rz + fx) / l\n      out[1] = 0.5 * (uz + fy) / l\n      out[2] = 0.5 * l\n      out[3] = 0.5 * (ry - ux) / l\n    }\n  }\n  return out\n}","'use strict'\n\nmodule.exports = createOrbitController\n\nvar filterVector  = require('filtered-vector')\nvar lookAt        = require('gl-mat4/lookAt')\nvar mat4FromQuat  = require('gl-mat4/fromQuat')\nvar invert44      = require('gl-mat4/invert')\nvar quatFromFrame = require('./lib/quatFromFrame')\n\nfunction len3(x,y,z) {\n  return Math.sqrt(Math.pow(x,2) + Math.pow(y,2) + Math.pow(z,2))\n}\n\nfunction len4(w,x,y,z) {\n  return Math.sqrt(Math.pow(w,2) + Math.pow(x,2) + Math.pow(y,2) + Math.pow(z,2))\n}\n\nfunction normalize4(out, a) {\n  var ax = a[0]\n  var ay = a[1]\n  var az = a[2]\n  var aw = a[3]\n  var al = len4(ax, ay, az, aw)\n  if(al > 1e-6) {\n    out[0] = ax/al\n    out[1] = ay/al\n    out[2] = az/al\n    out[3] = aw/al\n  } else {\n    out[0] = out[1] = out[2] = 0.0\n    out[3] = 1.0\n  }\n}\n\nfunction OrbitCameraController(initQuat, initCenter, initRadius) {\n  this.radius    = filterVector([initRadius])\n  this.center    = filterVector(initCenter)\n  this.rotation  = filterVector(initQuat)\n\n  this.computedRadius   = this.radius.curve(0)\n  this.computedCenter   = this.center.curve(0)\n  this.computedRotation = this.rotation.curve(0)\n  this.computedUp       = [0.1,0,0]\n  this.computedEye      = [0.1,0,0]\n  this.computedMatrix   = [0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\n  this.recalcMatrix(0)\n}\n\nvar proto = OrbitCameraController.prototype\n\nproto.lastT = function() {\n  return Math.max(\n    this.radius.lastT(),\n    this.center.lastT(),\n    this.rotation.lastT())\n}\n\nproto.recalcMatrix = function(t) {\n  this.radius.curve(t)\n  this.center.curve(t)\n  this.rotation.curve(t)\n\n  var quat = this.computedRotation\n  normalize4(quat, quat)\n\n  var mat = this.computedMatrix\n  mat4FromQuat(mat, quat)\n\n  var center = this.computedCenter\n  var eye    = this.computedEye\n  var up     = this.computedUp\n  var radius = Math.exp(this.computedRadius[0])\n\n  eye[0] = center[0] + radius * mat[2]\n  eye[1] = center[1] + radius * mat[6]\n  eye[2] = center[2] + radius * mat[10]\n  up[0] = mat[1]\n  up[1] = mat[5]\n  up[2] = mat[9]\n\n  for(var i=0; i<3; ++i) {\n    var rr = 0.0\n    for(var j=0; j<3; ++j) {\n      rr += mat[i+4*j] * eye[j]\n    }\n    mat[12+i] = -rr\n  }\n}\n\nproto.getMatrix = function(t, result) {\n  this.recalcMatrix(t)\n  var m = this.computedMatrix\n  if(result) {\n    for(var i=0; i<16; ++i) {\n      result[i] = m[i]\n    }\n    return result\n  }\n  return m\n}\n\nproto.idle = function(t) {\n  this.center.idle(t)\n  this.radius.idle(t)\n  this.rotation.idle(t)\n}\n\nproto.flush = function(t) {\n  this.center.flush(t)\n  this.radius.flush(t)\n  this.rotation.flush(t)\n}\n\nproto.pan = function(t, dx, dy, dz) {\n  dx = dx || 0.0\n  dy = dy || 0.0\n  dz = dz || 0.0\n\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n\n  var ux = mat[1]\n  var uy = mat[5]\n  var uz = mat[9]\n  var ul = len3(ux, uy, uz)\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var rx = mat[0]\n  var ry = mat[4]\n  var rz = mat[8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  var fx = mat[2]\n  var fy = mat[6]\n  var fz = mat[10]\n  var fu = fx * ux + fy * uy + fz * uz\n  var fr = fx * rx + fy * ry + fz * rz\n  fx -= fu * ux + fr * rx\n  fy -= fu * uy + fr * ry\n  fz -= fu * uz + fr * rz\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  var vx = rx * dx + ux * dy\n  var vy = ry * dx + uy * dy\n  var vz = rz * dx + uz * dy\n\n  this.center.move(t, vx, vy, vz)\n\n  //Update z-component of radius\n  var radius = Math.exp(this.computedRadius[0])\n  radius = Math.max(1e-4, radius + dz)\n  this.radius.set(t, Math.log(radius))\n}\n\nproto.rotate = function(t, dx, dy, dz) {\n  this.recalcMatrix(t)\n\n  dx = dx||0.0\n  dy = dy||0.0\n\n  var mat = this.computedMatrix\n\n  var rx = mat[0]\n  var ry = mat[4]\n  var rz = mat[8]\n\n  var ux = mat[1]\n  var uy = mat[5]\n  var uz = mat[9]\n\n  var fx = mat[2]\n  var fy = mat[6]\n  var fz = mat[10]\n\n  var qx = dx * rx + dy * ux\n  var qy = dx * ry + dy * uy\n  var qz = dx * rz + dy * uz\n\n  var bx = -(fy * qz - fz * qy)\n  var by = -(fz * qx - fx * qz)\n  var bz = -(fx * qy - fy * qx)  \n  var bw = Math.sqrt(Math.max(0.0, 1.0 - Math.pow(bx,2) - Math.pow(by,2) - Math.pow(bz,2)))\n  var bl = len4(bx, by, bz, bw)\n  if(bl > 1e-6) {\n    bx /= bl\n    by /= bl\n    bz /= bl\n    bw /= bl\n  } else {\n    bx = by = bz = 0.0\n    bw = 1.0\n  }\n\n  var rotation = this.computedRotation\n  var ax = rotation[0]\n  var ay = rotation[1]\n  var az = rotation[2]\n  var aw = rotation[3]\n\n  var cx = ax*bw + aw*bx + ay*bz - az*by\n  var cy = ay*bw + aw*by + az*bx - ax*bz\n  var cz = az*bw + aw*bz + ax*by - ay*bx\n  var cw = aw*bw - ax*bx - ay*by - az*bz\n  \n  //Apply roll\n  if(dz) {\n    bx = fx\n    by = fy\n    bz = fz\n    var s = Math.sin(dz) / len3(bx, by, bz)\n    bx *= s\n    by *= s\n    bz *= s\n    bw = Math.cos(dx)\n    cx = cx*bw + cw*bx + cy*bz - cz*by\n    cy = cy*bw + cw*by + cz*bx - cx*bz\n    cz = cz*bw + cw*bz + cx*by - cy*bx\n    cw = cw*bw - cx*bx - cy*by - cz*bz\n  }\n\n  var cl = len4(cx, cy, cz, cw)\n  if(cl > 1e-6) {\n    cx /= cl\n    cy /= cl\n    cz /= cl\n    cw /= cl\n  } else {\n    cx = cy = cz = 0.0\n    cw = 1.0\n  }\n\n  this.rotation.set(t, cx, cy, cz, cw)\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n\n  center = center || this.computedCenter\n  eye    = eye    || this.computedEye\n  up     = up     || this.computedUp\n\n  var mat = this.computedMatrix\n  lookAt(mat, eye, center, up)\n\n  var rotation = this.computedRotation\n  quatFromFrame(rotation,\n    mat[0], mat[1], mat[2],\n    mat[4], mat[5], mat[6],\n    mat[8], mat[9], mat[10])\n  normalize4(rotation, rotation)\n  this.rotation.set(t, rotation[0], rotation[1], rotation[2], rotation[3])\n\n  var fl = 0.0\n  for(var i=0; i<3; ++i) {\n    fl += Math.pow(center[i] - eye[i], 2)\n  }\n  this.radius.set(t, 0.5 * Math.log(Math.max(fl, 1e-6)))\n\n  this.center.set(t, center[0], center[1], center[2])\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  this.center.move(t,\n    dx||0.0,\n    dy||0.0,\n    dz||0.0)\n}\n\nproto.setMatrix = function(t, matrix) {\n\n  var rotation = this.computedRotation\n  quatFromFrame(rotation,\n    matrix[0], matrix[1], matrix[2],\n    matrix[4], matrix[5], matrix[6],\n    matrix[8], matrix[9], matrix[10])\n  normalize4(rotation, rotation)\n  this.rotation.set(t, rotation[0], rotation[1], rotation[2], rotation[3])\n\n  var mat = this.computedMatrix\n  invert44(mat, matrix)\n  var w = mat[15]\n  if(Math.abs(w) > 1e-6) {\n    var cx = mat[12]/w\n    var cy = mat[13]/w\n    var cz = mat[14]/w\n\n    this.recalcMatrix(t)  \n    var r = Math.exp(this.computedRadius[0])\n    this.center.set(t, cx-mat[2]*r, cy-mat[6]*r, cz-mat[10]*r)\n    this.radius.idle(t)\n  } else {\n    this.center.idle(t)\n    this.radius.idle(t)\n  }\n}\n\nproto.setDistance = function(t, d) {\n  if(d > 0) {\n    this.radius.set(t, Math.log(d))\n  }\n}\n\nproto.setDistanceLimits = function(lo, hi) {\n  if(lo > 0) {\n    lo = Math.log(lo)\n  } else {\n    lo = -Infinity    \n  }\n  if(hi > 0) {\n    hi = Math.log(hi)\n  } else {\n    hi = Infinity\n  }\n  hi = Math.max(hi, lo)\n  this.radius.bounds[0][0] = lo\n  this.radius.bounds[1][0] = hi\n}\n\nproto.getDistanceLimits = function(out) {\n  var bounds = this.radius.bounds\n  if(out) {\n    out[0] = Math.exp(bounds[0][0])\n    out[1] = Math.exp(bounds[1][0])\n    return out\n  }\n  return [ Math.exp(bounds[0][0]), Math.exp(bounds[1][0]) ]\n}\n\nproto.toJSON = function() {\n  this.recalcMatrix(this.lastT())\n  return {\n    center:   this.computedCenter.slice(),\n    rotation: this.computedRotation.slice(),\n    distance: Math.log(this.computedRadius[0]),\n    zoomMin:  this.radius.bounds[0][0],\n    zoomMax:  this.radius.bounds[1][0]\n  }\n}\n\nproto.fromJSON = function(options) {\n  var t = this.lastT()\n  var c = options.center\n  if(c) {\n    this.center.set(t, c[0], c[1], c[2])\n  }\n  var r = options.rotation\n  if(r) {\n    this.rotation.set(t, r[0], r[1], r[2], r[3])\n  }\n  var d = options.distance\n  if(d && d > 0) {\n    this.radius.set(t, Math.log(d))\n  }\n  this.setDistanceLimits(options.zoomMin, options.zoomMax)\n}\n\nfunction createOrbitController(options) {\n  options = options || {}\n  var center   = options.center   || [0,0,0]\n  var rotation = options.rotation || [0,0,0,1]\n  var radius   = options.radius   || 1.0\n\n  center = [].slice.call(center, 0, 3)\n  rotation = [].slice.call(rotation, 0, 4)\n  normalize4(rotation, rotation)\n\n  var result = new OrbitCameraController(\n    rotation,\n    center,\n    Math.log(radius))\n\n  result.setDistanceLimits(options.zoomMin, options.zoomMax)\n\n  if('eye' in options || 'up' in options) {\n    result.lookAt(0, options.eye, options.center, options.up)\n  }\n\n  return result\n}","module.exports = function parseUnit(str, out) {\n    if (!out)\n        out = [ 0, '' ]\n\n    str = String(str)\n    var num = parseFloat(str, 10)\n    out[0] = num\n    out[1] = str.match(/[\\d.\\-\\+]*\\s*(.*)/)[1] || ''\n    return out\n}","module.exports = require('gl-quat/slerp')","module.exports =\n  global.performance &&\n  global.performance.now ? function now() {\n    return performance.now()\n  } : Date.now || function now() {\n    return +new Date\n  }\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.Stats=t()}(this,function(){\"use strict\";var c=function(){var n=0,l=document.createElement(\"div\");function e(e){return l.appendChild(e.dom),e}function t(e){for(var t=0;t<l.children.length;t++)l.children[t].style.display=t===e?\"block\":\"none\";n=e}l.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\",l.addEventListener(\"click\",function(e){e.preventDefault(),t(++n%l.children.length)},!1);var i=(performance||Date).now(),a=i,o=0,f=e(new c.Panel(\"FPS\",\"#0ff\",\"#002\")),r=e(new c.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var d=e(new c.Panel(\"MB\",\"#f08\",\"#201\"));return t(0),{REVISION:16,dom:l,addPanel:e,showPanel:t,begin:function(){i=(performance||Date).now()},end:function(){o++;var e=(performance||Date).now();if(r.update(e-i,200),a+1e3<=e&&(f.update(1e3*o/(e-a),100),a=e,o=0,d)){var t=performance.memory;d.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){i=this.end()},domElement:l,setMode:t}};return c.Panel=function(n,l,i){var a=1/0,o=0,f=Math.round,r=f(window.devicePixelRatio||1),d=80*r,e=48*r,c=3*r,p=2*r,u=3*r,s=15*r,m=74*r,h=30*r,y=document.createElement(\"canvas\");y.width=d,y.height=e,y.style.cssText=\"width:80px;height:48px\";var v=y.getContext(\"2d\");return v.font=\"bold \"+9*r+\"px Helvetica,Arial,sans-serif\",v.textBaseline=\"top\",v.fillStyle=i,v.fillRect(0,0,d,e),v.fillStyle=l,v.fillText(n,c,p),v.fillRect(u,s,m,h),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(u,s,m,h),{dom:y,update:function(e,t){a=Math.min(a,e),o=Math.max(o,e),v.fillStyle=i,v.globalAlpha=1,v.fillRect(0,0,d,s),v.fillStyle=l,v.fillText(f(e)+\" \"+n+\" (\"+f(a)+\"-\"+f(o)+\")\",c,p),v.drawImage(y,u+r,s,m-r,h,u,s,m-r,h),v.fillRect(u+m-r,s,r,h),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(u+m-r,s,r,f((1-e/t)*h))}}},c});\n","'use strict'\n\nvar parseUnit = require('parse-unit')\n\nmodule.exports = toPX\n\nvar PIXELS_PER_INCH = getSizeBrutal('in', document.body) // 96\n\n\nfunction getPropertyInPX(element, prop) {\n  var parts = parseUnit(getComputedStyle(element).getPropertyValue(prop))\n  return parts[0] * toPX(parts[1], element)\n}\n\n//This brutal hack is needed\nfunction getSizeBrutal(unit, element) {\n  var testDIV = document.createElement('div')\n  testDIV.style['height'] = '128' + unit\n  element.appendChild(testDIV)\n  var size = getPropertyInPX(testDIV, 'height') / 128\n  element.removeChild(testDIV)\n  return size\n}\n\nfunction toPX(str, element) {\n  if (!str) return null\n\n  element = element || document.body\n  str = (str + '' || 'px').trim().toLowerCase()\n  if(element === window || element === document) {\n    element = document.body\n  }\n\n  switch(str) {\n    case '%':  //Ambiguous, not sure if we should use width or height\n      return element.clientHeight / 100.0\n    case 'ch':\n    case 'ex':\n      return getSizeBrutal(str, element)\n    case 'em':\n      return getPropertyInPX(element, 'font-size')\n    case 'rem':\n      return getPropertyInPX(document.body, 'font-size')\n    case 'vw':\n      return window.innerWidth/100\n    case 'vh':\n      return window.innerHeight/100\n    case 'vmin':\n      return Math.min(window.innerWidth, window.innerHeight) / 100\n    case 'vmax':\n      return Math.max(window.innerWidth, window.innerHeight) / 100\n    case 'in':\n      return PIXELS_PER_INCH\n    case 'cm':\n      return PIXELS_PER_INCH / 2.54\n    case 'mm':\n      return PIXELS_PER_INCH / 25.4\n    case 'pt':\n      return PIXELS_PER_INCH / 72\n    case 'pc':\n      return PIXELS_PER_INCH / 6\n    case 'px':\n      return 1\n  }\n\n  // detect number of units\n  var parts = parseUnit(str)\n  if (!isNaN(parts[0]) && parts[1]) {\n    var px = toPX(parts[1], element)\n    return typeof px === 'number' ? parts[0] * px : null\n  }\n\n  return null\n}\n","'use strict'\n\nmodule.exports = createTurntableController\n\nvar filterVector = require('filtered-vector')\nvar invert44     = require('gl-mat4/invert')\nvar rotateM      = require('gl-mat4/rotate')\nvar cross        = require('gl-vec3/cross')\nvar normalize3   = require('gl-vec3/normalize')\nvar dot3         = require('gl-vec3/dot')\n\nfunction len3(x, y, z) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2))\n}\n\nfunction clamp1(x) {\n  return Math.min(1.0, Math.max(-1.0, x))\n}\n\nfunction findOrthoPair(v) {\n  var vx = Math.abs(v[0])\n  var vy = Math.abs(v[1])\n  var vz = Math.abs(v[2])\n\n  var u = [0,0,0]\n  if(vx > Math.max(vy, vz)) {\n    u[2] = 1\n  } else if(vy > Math.max(vx, vz)) {\n    u[0] = 1\n  } else {\n    u[1] = 1\n  }\n\n  var vv = 0\n  var uv = 0\n  for(var i=0; i<3; ++i ) {\n    vv += v[i] * v[i]\n    uv += u[i] * v[i]\n  }\n  for(var i=0; i<3; ++i) {\n    u[i] -= (uv / vv) *  v[i]\n  }\n  normalize3(u, u)\n  return u\n}\n\nfunction TurntableController(zoomMin, zoomMax, center, up, right, radius, theta, phi) {\n  this.center = filterVector(center)\n  this.up     = filterVector(up)\n  this.right  = filterVector(right)\n  this.radius = filterVector([radius])\n  this.angle  = filterVector([theta, phi])\n  this.angle.bounds = [[-Infinity,-Math.PI/2], [Infinity,Math.PI/2]]\n  this.setDistanceLimits(zoomMin, zoomMax)\n\n  this.computedCenter = this.center.curve(0)\n  this.computedUp     = this.up.curve(0)\n  this.computedRight  = this.right.curve(0)\n  this.computedRadius = this.radius.curve(0)\n  this.computedAngle  = this.angle.curve(0)\n  this.computedToward = [0,0,0]\n  this.computedEye    = [0,0,0]\n  this.computedMatrix = new Array(16)\n  for(var i=0; i<16; ++i) {\n    this.computedMatrix[i] = 0.5\n  }\n\n  this.recalcMatrix(0)\n}\n\nvar proto = TurntableController.prototype\n\nproto.setDistanceLimits = function(minDist, maxDist) {\n  if(minDist > 0) {\n    minDist = Math.log(minDist)\n  } else {\n    minDist = -Infinity\n  }\n  if(maxDist > 0) {\n    maxDist = Math.log(maxDist)\n  } else {\n    maxDist = Infinity\n  }\n  maxDist = Math.max(maxDist, minDist)\n  this.radius.bounds[0][0] = minDist\n  this.radius.bounds[1][0] = maxDist\n}\n\nproto.getDistanceLimits = function(out) {\n  var bounds = this.radius.bounds[0]\n  if(out) {\n    out[0] = Math.exp(bounds[0][0])\n    out[1] = Math.exp(bounds[1][0])\n    return out\n  }\n  return [ Math.exp(bounds[0][0]), Math.exp(bounds[1][0]) ]\n}\n\nproto.recalcMatrix = function(t) {\n  //Recompute curves\n  this.center.curve(t)\n  this.up.curve(t)\n  this.right.curve(t)\n  this.radius.curve(t)\n  this.angle.curve(t)\n\n  //Compute frame for camera matrix\n  var up     = this.computedUp\n  var right  = this.computedRight\n  var uu = 0.0\n  var ur = 0.0\n  for(var i=0; i<3; ++i) {\n    ur += up[i] * right[i]\n    uu += up[i] * up[i]\n  }\n  var ul = Math.sqrt(uu)\n  var rr = 0.0\n  for(var i=0; i<3; ++i) {\n    right[i] -= up[i] * ur / uu\n    rr       += right[i] * right[i]\n    up[i]    /= ul\n  }\n  var rl = Math.sqrt(rr)\n  for(var i=0; i<3; ++i) {\n    right[i] /= rl\n  }\n\n  //Compute toward vector\n  var toward = this.computedToward\n  cross(toward, up, right)\n  normalize3(toward, toward)\n\n  //Compute angular parameters\n  var radius = Math.exp(this.computedRadius[0])\n  var theta  = this.computedAngle[0]\n  var phi    = this.computedAngle[1]\n\n  var ctheta = Math.cos(theta)\n  var stheta = Math.sin(theta)\n  var cphi   = Math.cos(phi)\n  var sphi   = Math.sin(phi)\n\n  var center = this.computedCenter\n\n  var wx = ctheta * cphi \n  var wy = stheta * cphi\n  var wz = sphi\n\n  var sx = -ctheta * sphi\n  var sy = -stheta * sphi\n  var sz = cphi\n\n  var eye = this.computedEye\n  var mat = this.computedMatrix\n  for(var i=0; i<3; ++i) {\n    var x      = wx * right[i] + wy * toward[i] + wz * up[i]\n    mat[4*i+1] = sx * right[i] + sy * toward[i] + sz * up[i]\n    mat[4*i+2] = x\n    mat[4*i+3] = 0.0\n  }\n\n  var ax = mat[1]\n  var ay = mat[5]\n  var az = mat[9]\n  var bx = mat[2]\n  var by = mat[6]\n  var bz = mat[10]\n  var cx = ay * bz - az * by\n  var cy = az * bx - ax * bz\n  var cz = ax * by - ay * bx\n  var cl = len3(cx, cy, cz)\n  cx /= cl\n  cy /= cl\n  cz /= cl\n  mat[0] = cx\n  mat[4] = cy\n  mat[8] = cz\n\n  for(var i=0; i<3; ++i) {\n    eye[i] = center[i] + mat[2+4*i]*radius\n  }\n\n  for(var i=0; i<3; ++i) {\n    var rr = 0.0\n    for(var j=0; j<3; ++j) {\n      rr += mat[i+4*j] * eye[j]\n    }\n    mat[12+i] = -rr\n  }\n  mat[15] = 1.0\n}\n\nproto.getMatrix = function(t, result) {\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n  if(result) {\n    for(var i=0; i<16; ++i) {\n      result[i] = mat[i]\n    }\n    return result\n  }\n  return mat\n}\n\nvar zAxis = [0,0,0]\nproto.rotate = function(t, dtheta, dphi, droll) {\n  this.angle.move(t, dtheta, dphi)\n  if(droll) {\n    this.recalcMatrix(t)\n\n    var mat = this.computedMatrix\n    zAxis[0] = mat[2]\n    zAxis[1] = mat[6]\n    zAxis[2] = mat[10]\n\n    var up     = this.computedUp\n    var right  = this.computedRight\n    var toward = this.computedToward\n\n    for(var i=0; i<3; ++i) {\n      mat[4*i]   = up[i]\n      mat[4*i+1] = right[i]\n      mat[4*i+2] = toward[i]\n    }\n    rotateM(mat, mat, droll, zAxis)\n    for(var i=0; i<3; ++i) {\n      up[i] =    mat[4*i]\n      right[i] = mat[4*i+1]\n    }\n\n    this.up.set(t, up[0], up[1], up[2])\n    this.right.set(t, right[0], right[1], right[2])\n  }\n}\n\nproto.pan = function(t, dx, dy, dz) {\n  dx = dx || 0.0\n  dy = dy || 0.0\n  dz = dz || 0.0\n\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n\n  var dist = Math.exp(this.computedRadius[0])\n\n  var ux = mat[1]\n  var uy = mat[5]\n  var uz = mat[9]\n  var ul = len3(ux, uy, uz)\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var rx = mat[0]\n  var ry = mat[4]\n  var rz = mat[8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  var vx = rx * dx + ux * dy\n  var vy = ry * dx + uy * dy\n  var vz = rz * dx + uz * dy\n  this.center.move(t, vx, vy, vz)\n\n  //Update z-component of radius\n  var radius = Math.exp(this.computedRadius[0])\n  radius = Math.max(1e-4, radius + dz)\n  this.radius.set(t, Math.log(radius))\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  this.center.move(t,\n    dx||0.0,\n    dy||0.0,\n    dz||0.0)\n}\n\n//Recenters the coordinate axes\nproto.setMatrix = function(t, mat, axes, noSnap) {\n  \n  //Get the axes for tare\n  var ushift = 1\n  if(typeof axes === 'number') {\n    ushift = (axes)|0\n  } \n  if(ushift < 0 || ushift > 3) {\n    ushift = 1\n  }\n  var vshift = (ushift + 2) % 3\n  var fshift = (ushift + 1) % 3\n\n  //Recompute state for new t value\n  if(!mat) { \n    this.recalcMatrix(t)\n    mat = this.computedMatrix\n  }\n\n  //Get right and up vectors\n  var ux = mat[ushift]\n  var uy = mat[ushift+4]\n  var uz = mat[ushift+8]\n  if(!noSnap) {\n    var ul = len3(ux, uy, uz)\n    ux /= ul\n    uy /= ul\n    uz /= ul\n  } else {\n    var ax = Math.abs(ux)\n    var ay = Math.abs(uy)\n    var az = Math.abs(uz)\n    var am = Math.max(ax,ay,az)\n    if(ax === am) {\n      ux = (ux < 0) ? -1 : 1\n      uy = uz = 0\n    } else if(az === am) {\n      uz = (uz < 0) ? -1 : 1\n      ux = uy = 0\n    } else {\n      uy = (uy < 0) ? -1 : 1\n      ux = uz = 0\n    }\n  }\n\n  var rx = mat[vshift]\n  var ry = mat[vshift+4]\n  var rz = mat[vshift+8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n  \n  var fx = uy * rz - uz * ry\n  var fy = uz * rx - ux * rz\n  var fz = ux * ry - uy * rx\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  this.center.jump(t, ex, ey, ez)\n  this.radius.idle(t)\n  this.up.jump(t, ux, uy, uz)\n  this.right.jump(t, rx, ry, rz)\n\n  var phi, theta\n  if(ushift === 2) {\n    var cx = mat[1]\n    var cy = mat[5]\n    var cz = mat[9]\n    var cr = cx * rx + cy * ry + cz * rz\n    var cf = cx * fx + cy * fy + cz * fz\n    if(tu < 0) {\n      phi = -Math.PI/2\n    } else {\n      phi = Math.PI/2\n    }\n    theta = Math.atan2(cf, cr)\n  } else {\n    var tx = mat[2]\n    var ty = mat[6]\n    var tz = mat[10]\n    var tu = tx * ux + ty * uy + tz * uz\n    var tr = tx * rx + ty * ry + tz * rz\n    var tf = tx * fx + ty * fy + tz * fz\n\n    phi = Math.asin(clamp1(tu))\n    theta = Math.atan2(tf, tr)\n  }\n\n  this.angle.jump(t, theta, phi)\n\n  this.recalcMatrix(t)\n  var dx = mat[2]\n  var dy = mat[6]\n  var dz = mat[10]\n\n  var imat = this.computedMatrix\n  invert44(imat, mat)\n  var w  = imat[15]\n  var ex = imat[12] / w\n  var ey = imat[13] / w\n  var ez = imat[14] / w\n\n  var gs = Math.exp(this.computedRadius[0])\n  this.center.jump(t, ex-dx*gs, ey-dy*gs, ez-dz*gs)\n}\n\nproto.lastT = function() {\n  return Math.max(\n    this.center.lastT(),\n    this.up.lastT(),\n    this.right.lastT(),\n    this.radius.lastT(),\n    this.angle.lastT())\n}\n\nproto.idle = function(t) {\n  this.center.idle(t)\n  this.up.idle(t)\n  this.right.idle(t)\n  this.radius.idle(t)\n  this.angle.idle(t)\n}\n\nproto.flush = function(t) {\n  this.center.flush(t)\n  this.up.flush(t)\n  this.right.flush(t)\n  this.radius.flush(t)\n  this.angle.flush(t)\n}\n\nproto.setDistance = function(t, d) {\n  if(d > 0) {\n    this.radius.set(t, Math.log(d))\n  }\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n\n  eye    = eye    || this.computedEye\n  center = center || this.computedCenter\n  up     = up     || this.computedUp\n\n  var ux = up[0]\n  var uy = up[1]\n  var uz = up[2]\n  var ul = len3(ux, uy, uz)\n  if(ul < 1e-6) {\n    return\n  }\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var tx = eye[0] - center[0]\n  var ty = eye[1] - center[1]\n  var tz = eye[2] - center[2]\n  var tl = len3(tx, ty, tz)\n  if(tl < 1e-6) {\n    return\n  }\n  tx /= tl\n  ty /= tl\n  tz /= tl\n\n  var right = this.computedRight\n  var rx = right[0]\n  var ry = right[1]\n  var rz = right[2]\n  var ru = ux*rx + uy*ry + uz*rz\n  rx -= ru * ux\n  ry -= ru * uy\n  rz -= ru * uz\n  var rl = len3(rx, ry, rz)\n\n  if(rl < 0.01) {\n    rx = uy * tz - uz * ty\n    ry = uz * tx - ux * tz\n    rz = ux * ty - uy * tx\n    rl = len3(rx, ry, rz)\n    if(rl < 1e-6) {\n      return\n    }\n  }\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  this.up.set(t, ux, uy, uz)\n  this.right.set(t, rx, ry, rz)\n  this.center.set(t, center[0], center[1], center[2])\n  this.radius.set(t, Math.log(tl))\n\n  var fx = uy * rz - uz * ry\n  var fy = uz * rx - ux * rz\n  var fz = ux * ry - uy * rx\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  var tu = ux*tx + uy*ty + uz*tz\n  var tr = rx*tx + ry*ty + rz*tz\n  var tf = fx*tx + fy*ty + fz*tz\n\n  var phi   = Math.asin(clamp1(tu))\n  var theta = Math.atan2(tf, tr)\n\n  var angleState = this.angle._state\n  var lastTheta  = angleState[angleState.length-1]\n  var lastPhi    = angleState[angleState.length-2]\n  lastTheta      = lastTheta % (2.0 * Math.PI)\n  var dp = Math.abs(lastTheta + 2.0 * Math.PI - theta)\n  var d0 = Math.abs(lastTheta - theta)\n  var dn = Math.abs(lastTheta - 2.0 * Math.PI - theta)\n  if(dp < d0) {\n    lastTheta += 2.0 * Math.PI\n  }\n  if(dn < d0) {\n    lastTheta -= 2.0 * Math.PI\n  }\n\n  this.angle.jump(this.angle.lastT(), lastTheta, lastPhi)\n  this.angle.set(t, theta, phi)\n}\n\nfunction createTurntableController(options) {\n  options = options || {}\n\n  var center = options.center || [0,0,0]\n  var up     = options.up     || [0,1,0]\n  var right  = options.right  || findOrthoPair(up)\n  var radius = options.radius || 1.0\n  var theta  = options.theta  || 0.0\n  var phi    = options.phi    || 0.0\n\n  center = [].slice.call(center, 0, 3)\n\n  up = [].slice.call(up, 0, 3)\n  normalize3(up, up)\n\n  right = [].slice.call(right, 0, 3)\n  normalize3(right, right)\n\n  if('eye' in options) {\n    var eye = options.eye\n    var toward = [\n      eye[0]-center[0],\n      eye[1]-center[1],\n      eye[2]-center[2]\n    ]\n    cross(right, toward, up)\n    if(len3(right[0], right[1], right[2]) < 1e-6) {\n      right = findOrthoPair(up)\n    } else {\n      normalize3(right, right)\n    }\n\n    radius = len3(toward[0], toward[1], toward[2])\n\n    var ut = dot3(up, toward) / radius\n    var rt = dot3(right, toward) / radius\n    phi    = Math.acos(ut)\n    theta  = Math.acos(rt)\n  }\n\n  //Use logarithmic coordinates for radius\n  radius = Math.log(radius)\n\n  //Return the controller\n  return new TurntableController(\n    options.zoomMin,\n    options.zoomMax,\n    center,\n    up,\n    right,\n    radius,\n    theta,\n    phi)\n}","module.exports = \"#version 300 es\\nprecision highp float;\\n\\nuniform vec3 u_Eye, u_Ref, u_Up;\\nuniform vec2 u_Dimensions;\\nuniform float u_Time;\\n\\nuniform mat4 u_ViewProj;\\n\\nconst float STEPSIZE = 0.01;\\nconst int MAXSTEPS = 500;\\nconst float EPS = 0.001;\\nconst float DISCRETIZE_NUM = 4.0;\\n\\nconst float SPHERE_RADIUS = 1.5;\\nconst float TERRAIN_FREQ = 2.0;\\nconst float TERRAIN_AMP = 0.6;\\n\\nconst vec3 SKYCOLOR = vec3(0.47, 0.66, 0.82);\\nconst vec3 CLOUDCOLOR = vec3(1.0);\\nconst float CLOUD_HEIGHT = 0.6;\\nconst float CLOUD_THICKNESS = 0.2;\\n\\nconst vec3 KEYLIGHT_POS = vec3(15, 15, 10);\\nconst vec3 KEYLIGHT = vec3(1.0, 1.0, 0.9) * 1.5;\\nconst vec3 FILLLIGHT_POS = vec3(0, 5, 0);\\nconst vec3 FILLLIGHT = vec3(0.47, 0.66, 0.82) * 0.7;\\nconst vec3 BACKLIGHT_POS = vec3(0, -5, 0);\\nconst vec3 BACKLIGHT = vec3(1.0, 1.0, 0.9) * 0.3;\\n\\nin vec2 fs_Pos;\\nin vec4 fs_LightVec;  \\nout vec4 out_Col;\\n\\n\\nfloat ease_in_quadratic(float t) \\n{\\n    return t * t;\\n}\\n\\nfloat bias(float b, float t) \\n{\\n    return pow(t, log(b) / log(0.5));\\n}\\n\\nfloat gain(float g, float t) \\n{\\n    if (t < 0.5)\\n        return bias(1.0-g, 2.0*t)/2.0;\\n    else\\n        return 1.0 - bias(1.0-g, 2.0 - 2.0*t)/2.0;\\n}\\n\\nfloat impulse(float k, float x)\\n{\\n    float h = k*x;\\n    return h * exp(1.0-h);\\n}\\n\\nfloat map(float value, float min1, float max1, float min2, float max2) {\\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\\n}\\n\\n// Hash functions are taken from IQ's shadertoy examples\\nfloat hash2(in vec2 st) {\\n    return fract(sin(dot(st.xy,\\n                  vec2(12.9898,78.233)))\\n                 * 43758.5453123);\\n}\\n\\nfloat hash3(vec3 p)\\n{\\n  p  = fract( p*0.3183099+.1 );\\n  p *= 17.0;\\n  return fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\\n}\\n\\nfloat trilinear(float a, float b, float c, float d, \\n                float e, float f, float g, float h, vec3 u)\\n{\\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y), \\n                mix(mix(e, f, u.x), mix(g, h, u.x), u.y), u.z);\\n}\\n\\nfloat bilinear(float a, float b, float c, float d, vec2 u)\\n{\\n  return mix(mix(a, b, u.x), mix(c, d, u.x), u.y);\\n}\\n\\nvec2 cubic2(vec2 t)\\n{\\n    return t*t*(3.0-2.0*t);\\n}\\n\\nvec3 cubic3(vec3 t)\\n{\\n    return t*t*(3.0-2.0*t);\\n}\\n\\nvec2 quintic2(vec2 t)\\n{\\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\\n}\\n\\nvec3 quintic3(vec3 t)\\n{\\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\\n}\\n\\n// float grad(vec3 2, vec3 2, vec2 inc)\\n// {\\n//     return dot(hash3(i + inc), f - inc);\\n// }\\n\\nfloat noise3( in vec3 x )\\n{\\n    vec3 i = floor(x);\\n    vec3 u = fract(x);\\n    u = cubic3(u);\\n\\t\\n    float a = hash3(i+vec3(0,0,0));\\n    float b = hash3(i+vec3(1,0,0));\\n    float c = hash3(i+vec3(0,1,0));\\n    float d = hash3(i+vec3(1,1,0));\\n    float e = hash3(i+vec3(0,0,1));\\n    float f = hash3(i+vec3(1,0,1));\\n    float g = hash3(i+vec3(0,1,1));\\n    float h = hash3(i+vec3(1,1,1));\\n\\n    // Trilinear Interpolation\\n    return trilinear(a, b, c, d, e, f, g, h, u);\\n}\\n\\nfloat noise2( in vec2 x )\\n{\\n    vec2 i = floor(x);\\n    vec2 u = fract(x);\\n    u = cubic2(u);\\n\\n    float a = hash2(i + vec2(0,0));\\n    float b = hash2(i + vec2(1,0));\\n    float c = hash2(i + vec2(0,1));\\n    float d = hash2(i + vec2(1,1));\\n\\n    return bilinear(a, b, c, d, u);\\n}\\n\\nfloat fbm3(in vec3 pos)\\n{\\n    float total = 0.f;\\n    float amplitudeSum = 0.f;\\n\\n    for (int i = 0; i < 10; i++)\\n    {\\n        float frequency = pow(2.0f, float(i));\\n        float amplitude = pow(0.7f, float(i));\\n        \\n        amplitudeSum += amplitude;\\n\\n        total += amplitude*noise3(frequency*pos*1.0);\\n    }\\n\\n    return total/amplitudeSum;\\n}\\n\\nfloat fbm2(in vec2 pos)\\n{\\n    float total = 0.f;\\n    float amplitudeSum = 0.f;\\n\\n    for (int i = 0; i < 10; i++)\\n    {\\n        float frequency = pow(2.0f, float(i));\\n        float amplitude = pow(0.4f, float(i));\\n        \\n        amplitudeSum += amplitude;\\n\\n        total += amplitude*noise2(frequency*pos*1.0);\\n    }\\n\\n    return total/amplitudeSum;\\n}\\n\\nfloat sdBox(vec3 p, vec3 b)\\n{\\n    vec3 d = abs(p) - b;\\n    return min(max(d.x, max(d.y, d.z)), 0.0) + length(max(d, 0.0));\\n}\\n\\nfloat sdRoundBox( vec3 p, vec3 b, float r )\\n{\\n  vec3 q = abs(p) - b;\\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\\n}\\n\\nfloat sdBBox(vec3 p)\\n{\\n    return sdBox(p, vec3(2.0, 2.0, 2.0));\\n}\\n\\nfloat sdSphere( vec3 p, float s )\\n{\\n  return length(p)-s;\\n}\\n\\nfloat sdCloud( vec3 p )\\n{\\n  return -sdBox(p - vec3(0.0, CLOUD_HEIGHT, 0.0), vec3(2.0, CLOUD_THICKNESS, 2.0)) \\n          + 0.7*map(fbm3(3.0*(p + 0.005 * u_Time * vec3(1.0, 0.0, 1.0))), 0.0, 1.0, -1.0, 1.0);\\n}\\n\\nfloat sdHeight( in vec3 p )\\n{\\n  float h = TERRAIN_AMP*fbm2(TERRAIN_FREQ*p.xz);\\n  h = map(h, 0.0, 1.0, -0.8*SPHERE_RADIUS, 0.8*SPHERE_RADIUS);\\n  return p.y - h;\\n}\\n\\nfloat discr( float x )\\n{\\n  float w = 1.0/DISCRETIZE_NUM;\\n  return floor(x/w)*w;\\n}\\n\\nfloat shadowP (vec3 pos, in vec3 dir, float k)\\n{\\n  pos += dir * 0.1;\\n  float res = 1.0;\\n  for (int i = 0; i < 50; ++i)\\n  {\\n    float d = sdHeight( pos );\\n    if (d < EPS)\\n      return 0.0;\\n\\n    // soft shadow\\n    res = min(res, k*d/(float(i)*STEPSIZE));\\n    pos += dir * STEPSIZE;\\n  }\\n  return res;\\n}\\n\\nvec3 shadeToon( vec3 pos, vec3 normal, vec3 albedo )\\n{\\n  vec3 n = normalize(normal);\\n  // Calculate the diffuse term for Lambert shading\\n\\n  vec3 col = albedo * \\n            KEYLIGHT * \\n            discr(max(0.0, dot(n, normalize(KEYLIGHT_POS - pos))));\\n  col += albedo * FILLLIGHT * discr(max(0.0, dot(n, normalize(FILLLIGHT_POS - pos))));\\n\\n  return col;\\n}\\n\\nvec3 shadeLambert( vec3 pos, vec3 normal, vec3 albedo )\\n{\\n  vec3 n = normalize(normal);\\n  // Calculate the diffuse term for Lambert shading\\n\\n  vec3 col = albedo * \\n            KEYLIGHT * \\n            max(0.0, dot(n, normalize(KEYLIGHT_POS - pos)));\\n  col += albedo * FILLLIGHT * clamp(dot(n, normalize(FILLLIGHT_POS - pos)), 0.0, 1.0);\\n  col += albedo * BACKLIGHT * clamp(dot(n, normalize(BACKLIGHT_POS - pos)), 0.0, 1.0);\\n\\n  return col;\\n}\\n\\nvec3 skyColor( vec2 uv )\\n{\\n  float t = map(uv.y, -1.0, 1.0, 0.0, 1.0);\\n  return mix(vec3(0.0), SKYCOLOR, gain(0.3, t));\\n}\\n\\nvec3 getTerrainNormal( vec3 p )\\n{\\n  vec3 dx = vec3(EPS, 0, 0);\\n  vec3 dz = vec3(0, 0, EPS);\\n  return normalize(vec3(sdHeight(p + dx) - sdHeight(p - dx), \\n                      2.0*EPS,\\n                      sdHeight(p + dz) - sdHeight(p - dz)));\\n}\\n\\nvec3 getTerrainShading( vec3 pos, vec3 n )\\n{\\n  vec3 s = normalize(KEYLIGHT_POS - pos);\\n\\n  // TODO: Use line intersection to find q exactly\\n  vec3 q = pos + s * (CLOUD_HEIGHT - pos.y) * 2.0;\\n\\n  vec3 col = KEYLIGHT * \\n             max(0.0, dot(n, s)) *\\n             shadowP(pos, s, 2.0) * smoothstep(-0.3, 0.3, sdCloud(q));\\n            // shadowP(pos, normalize(KEYLIGHT_POS - pos));\\n  col += FILLLIGHT * max(0.0, dot(n, normalize(FILLLIGHT_POS - pos)));\\n  col += BACKLIGHT * max(0.0, dot(n, normalize(BACKLIGHT_POS - pos)));\\n  return col;\\n}\\n\\nvec3 getTerrainMaterial( vec3 p, vec3 n )\\n{\\n  vec3 col = vec3(0.21, 0.25, 0.20);  // ground\\n  col = mix(col, /* grass */ vec3(0.90,0.58,0.38), smoothstep(0.2, 0.8, n.y));\\n  col = mix(col, vec3(0.94, 0.95, 0.93), smoothstep(-0.4, 0.0, p.y));\\n\\n  return col;\\n}\\n\\nvec3 applyFog( vec3 col, float d )\\n{\\n  return mix(vec3(0.80), col, exp(-0.2*d));\\n}\\n\\nbool hitBSphere( inout vec3 p, in vec3 dir)\\n{\\n  for (int i = 0; i < 50; i++)\\n  {\\n    float d = sdSphere(p, SPHERE_RADIUS);\\n    if (d < EPS)\\n      return true;\\n    p += dir * d;\\n  }\\n  return false;\\n}\\n\\nbool hitTerrain( vec3 p, in vec3 dir, inout vec3 color )\\n{\\n  float dt = STEPSIZE;\\n  float lh = 0.0;\\n  float ly = 0.0;\\n  float a = 0.0;\\n  for (int i = 0; i < MAXSTEPS; i++)\\n  {\\n      float d = sdHeight(p);\\n      float t = float(i) * dt;\\n\\n      float cloudDensity = bias(sdCloud(p), 0.45);\\n      cloudDensity = smoothstep(0.1, 0.4, cloudDensity);\\n\\n      if (cloudDensity > EPS)\\n      {\\n        // vec3 n = getCloudNormal(p);\\n\\n        // gradient = [df/dx, df/dy, df/dz]\\n        vec3 grad = vec3(0.0,sign(p.y-CLOUD_HEIGHT),0.0);\\n        vec3 s = normalize(KEYLIGHT_POS - p);\\n\\n        float ld = sdCloud(p + 0.03*s);\\n        float shadow = 1.0 - smoothstep(-1.0, 1.0, ld);\\n\\n        float dif = clamp(0.3+0.7*abs(dot(grad, s)), 0.0, 1.0);\\n\\n        vec3 col = vec3(0.8) * 0.45;\\n\\n        col *= (dif + 0.1);\\n\\n        col = applyFog(col, t);\\n\\n        color += (1.0 - a) * cloudDensity * col;\\n\\n        a += (1.0 - a) * cloudDensity * 0.3;\\n        \\n        if (a > 0.95)  // ray is absorbed by the cloud\\n          break;\\n      }\\n      else if (d < EPS)\\n      {\\n          p -= dir * dt; // step back one\\n          p += dir * dt*(lh-ly)/(-ly+d+lh); // step to interpolated point\\n\\n          // Calculate normal\\n          vec3 n = getTerrainNormal(p);\\n\\n          color += getTerrainShading(p, n) * getTerrainMaterial(p, n);\\n\\n          color = applyFog(color, t);\\n\\n          return true;\\n      }\\n      // Checks if the ray hits the bounding box from the inside\\n      else if (sdBBox(p) > 0.0)\\n      {\\n          dir = refract(dir, normalize(p), 1.0/1.2);\\n          p += dir*0.5;\\n          vec4 uv = u_ViewProj*vec4(p, 1.0);\\n\\n          color += skyColor(vec2(uv.x, uv.y));\\n          return false;\\n      }\\n\\n      lh = p.y - d;\\n      ly = p.y;\\n\\n      dt = STEPSIZE + 0.0005*float(i);\\n      p += dir * dt;\\n  }\\n  return false;\\n}\\n\\nvoid main() {\\n\\n  vec3 eye = u_Eye;\\n  vec3 forward = normalize(u_Ref - u_Eye);\\n  vec3 up = u_Up;\\n  vec3 right = normalize(cross(forward,up));\\n\\n  float f = 0.5 * distance(u_Eye, u_Ref);\\n  float u = gl_FragCoord.x * 2.0 / u_Dimensions.x - 1.0;\\n  float v = gl_FragCoord.y * 2.0 / u_Dimensions.y - 1.0;\\n\\n  float aspectRatio = u_Dimensions.x / u_Dimensions.y;\\n  right *= aspectRatio;\\n\\n  // ray's world position\\n  vec3 pos = eye + right * u + up * v + forward * f;\\n  // ray's direction\\n  vec3 dir = normalize(pos - eye);\\n\\n  int itr = 0;\\n  float d = 0.0;\\n\\n  vec3 col = vec3(0.);\\n  if (hitBSphere(pos, dir))\\n  {\\n    if(sdHeight(pos) < EPS)\\n      col = shadeLambert(pos, normalize(pos), vec3(0.3));\\n    else\\n    {\\n      dir = refract(dir, normalize(pos), 1.0/1.2);\\n      hitTerrain(pos, dir, col);\\n    }\\n  }\\n  else \\n  {\\n    col = skyColor(vec2(u, v));\\n  }\\n\\n  out_Col = vec4(col, 1.0);\\n}\\n\"","module.exports = \"#version 300 es\\nprecision highp float;\\n\\n// The vertex shader used to render the background of the scene\\n\\nin vec4 vs_Pos;\\nout vec2 fs_Pos;\\n\\nvoid main() {\\n  fs_Pos = vs_Pos.xy;\\n  gl_Position = vs_Pos;\\n}\\n\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","\nexport var gl: WebGL2RenderingContext;\nexport function setGL(_gl: WebGL2RenderingContext) {\n  gl = _gl;\n}\n","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import {mat4, vec4} from 'gl-matrix';\nimport Drawable from './Drawable';\nimport Camera from '../../Camera';\nimport {gl} from '../../globals';\nimport ShaderProgram from './ShaderProgram';\n\n// In this file, `gl` is accessible because it is imported above\nclass OpenGLRenderer {\n  constructor(public canvas: HTMLCanvasElement) {\n  }\n\n  setClearColor(r: number, g: number, b: number, a: number) {\n    gl.clearColor(r, g, b, a);\n  }\n\n  setSize(width: number, height: number) {\n    this.canvas.width = width;\n    this.canvas.height = height;\n  }\n\n  clear() {\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n\n  render(camera: Camera, prog: ShaderProgram, drawables: Array<Drawable>, time: number) {\n    prog.setEyeRefUp(camera.controls.eye, camera.controls.center, camera.controls.up);\n    prog.setTime(time);\n\n    let viewProj = mat4.create();\n    mat4.multiply(viewProj, camera.projectionMatrix, camera.viewMatrix);\n    prog.setViewProjMatrix(viewProj);\n\n    for (let drawable of drawables) {\n      prog.draw(drawable);\n    }\n  }\n};\n\nexport default OpenGLRenderer;\n","var CameraControls = require('3d-view-controls');\nimport {vec3, mat4} from 'gl-matrix';\n\nclass Camera {\n  controls: any;\n  projectionMatrix: mat4 = mat4.create();\n  viewMatrix: mat4 = mat4.create();\n  fovy: number = 45;\n  aspectRatio: number = 1;\n  near: number = 0.1;\n  far: number = 1000;\n  position: vec3 = vec3.create();\n  direction: vec3 = vec3.create();\n  target: vec3 = vec3.create();\n  up: vec3 = vec3.create();\n\n  constructor(position: vec3, target: vec3) {\n    this.controls = CameraControls(document.getElementById('canvas'), {\n      eye: position,\n      center: target,\n    });\n    vec3.add(this.target, this.position, this.direction);\n    mat4.lookAt(this.viewMatrix, this.controls.eye, this.controls.center, this.controls.up);\n  }\n\n  setAspectRatio(aspectRatio: number) {\n    this.aspectRatio = aspectRatio;\n  }\n\n  updateProjectionMatrix() {\n    mat4.perspective(this.projectionMatrix, this.fovy, this.aspectRatio, this.near, this.far);\n  }\n\n  update() {\n    this.controls.tick();\n    vec3.add(this.target, this.position, this.direction);\n    mat4.lookAt(this.viewMatrix, this.controls.eye, this.controls.center, this.controls.up);\n  }\n};\n\nexport default Camera;\n","import {vec2, vec3, vec4, mat4} from 'gl-matrix';\nimport Drawable from './Drawable';\nimport {gl} from '../../globals';\n\nvar activeProgram: WebGLProgram = null;\n\nexport class Shader {\n  shader: WebGLShader;\n\n  constructor(type: number, source: string) {\n    this.shader = gl.createShader(type);\n    gl.shaderSource(this.shader, source);\n    gl.compileShader(this.shader);\n\n    if (!gl.getShaderParameter(this.shader, gl.COMPILE_STATUS)) {\n      throw gl.getShaderInfoLog(this.shader);\n    }\n  }\n};\n\nclass ShaderProgram {\n  prog: WebGLProgram;\n\n  attrPos: number;\n  attrNor: number;\n\n  unifRef: WebGLUniformLocation;\n  unifEye: WebGLUniformLocation;\n  unifUp: WebGLUniformLocation;\n  unifDimensions: WebGLUniformLocation;\n  unifTime: WebGLUniformLocation;\n  unifViewProj: WebGLUniformLocation;\n\n  constructor(shaders: Array<Shader>) {\n    this.prog = gl.createProgram();\n\n    for (let shader of shaders) {\n      gl.attachShader(this.prog, shader.shader);\n    }\n    gl.linkProgram(this.prog);\n    if (!gl.getProgramParameter(this.prog, gl.LINK_STATUS)) {\n      throw gl.getProgramInfoLog(this.prog);\n    }\n\n    this.attrPos = gl.getAttribLocation(this.prog, \"vs_Pos\");\n    this.unifEye   = gl.getUniformLocation(this.prog, \"u_Eye\");\n    this.unifRef   = gl.getUniformLocation(this.prog, \"u_Ref\");\n    this.unifUp   = gl.getUniformLocation(this.prog, \"u_Up\");\n    this.unifDimensions   = gl.getUniformLocation(this.prog, \"u_Dimensions\");\n    this.unifTime   = gl.getUniformLocation(this.prog, \"u_Time\");\n    this.unifViewProj = gl.getUniformLocation(this.prog, \"u_ViewProj\");\n  }\n\n  use() {\n    if (activeProgram !== this.prog) {\n      gl.useProgram(this.prog);\n      activeProgram = this.prog;\n    }\n  }\n\n  setEyeRefUp(eye: vec3, ref: vec3, up: vec3) {\n    this.use();\n    if(this.unifEye !== -1) {\n      gl.uniform3f(this.unifEye, eye[0], eye[1], eye[2]);\n    }\n    if(this.unifRef !== -1) {\n      gl.uniform3f(this.unifRef, ref[0], ref[1], ref[2]);\n    }\n    if(this.unifUp !== -1) {\n      gl.uniform3f(this.unifUp, up[0], up[1], up[2]);\n    }\n  }\n\n  setDimensions(width: number, height: number) {\n    this.use();\n    if(this.unifDimensions !== -1) {\n      gl.uniform2f(this.unifDimensions, width, height);\n    }\n  }\n\n  setTime(t: number) {\n    this.use();\n    if(this.unifTime !== -1) {\n      gl.uniform1f(this.unifTime, t);\n    }\n  }\n\n  setViewProjMatrix(vp: mat4) {\n    this.use();\n    if (this.unifViewProj !== -1) {\n      gl.uniformMatrix4fv(this.unifViewProj, false, vp);\n    }\n  }\n\n  draw(d: Drawable) {\n    this.use();\n\n    if (this.attrPos != -1 && d.bindPos()) {\n      gl.enableVertexAttribArray(this.attrPos);\n      gl.vertexAttribPointer(this.attrPos, 4, gl.FLOAT, false, 0, 0);\n    }\n\n    d.bindIdx();\n    gl.drawElements(d.drawMode(), d.elemCount(), gl.UNSIGNED_INT, 0);\n\n    if (this.attrPos != -1) gl.disableVertexAttribArray(this.attrPos);\n  }\n};\n\nexport default ShaderProgram;\n","import {vec2, vec3} from 'gl-matrix';\nconst Stats = require('stats-js');\n// import * as DAT from 'dat-gui';\nimport Square from './geometry/Square';\nimport OpenGLRenderer from './rendering/gl/OpenGLRenderer';\nimport Camera from './Camera';\nimport {setGL} from './globals';\nimport ShaderProgram, {Shader} from './rendering/gl/ShaderProgram';\n\n// Define an object with application parameters and button callbacks\n// This will be referred to by dat.GUI's functions that add GUI elements.\nconst controls = {\n  tesselations: 5,\n  'Load Scene': loadScene, // A function pointer, essentially\n};\n\nlet square: Square;\nlet time: number = 0;\n\nfunction loadScene() {\n  square = new Square(vec3.fromValues(0, 0, 0));\n  square.create();\n  // time = 0;\n}\n\nfunction main() {\n  window.addEventListener('keypress', function (e) {\n    // console.log(e.key);\n    switch(e.key) {\n      // Use this if you wish\n    }\n  }, false);\n\n  window.addEventListener('keyup', function (e) {\n    switch(e.key) {\n      // Use this if you wish\n    }\n  }, false);\n\n  // Initial display for framerate\n  const stats = Stats();\n  stats.setMode(0);\n  stats.domElement.style.position = 'absolute';\n  stats.domElement.style.left = '0px';\n  stats.domElement.style.top = '0px';\n  document.body.appendChild(stats.domElement);\n\n  // Add controls to the gui\n  // const gui = new DAT.GUI();\n\n  // get canvas and webgl context\n  const canvas = <HTMLCanvasElement> document.getElementById('canvas');\n  const gl = <WebGL2RenderingContext> canvas.getContext('webgl2');\n  if (!gl) {\n    alert('WebGL 2 not supported!');\n  }\n  // `setGL` is a function imported above which sets the value of `gl` in the `globals.ts` module.\n  // Later, we can import `gl` from `globals.ts` to access it\n  setGL(gl);\n\n  // Initial call to load scene\n  loadScene();\n\n  const camera = new Camera(vec3.fromValues(10, 10, -10), vec3.fromValues(0, 0, 0));\n\n  const renderer = new OpenGLRenderer(canvas);\n  renderer.setClearColor(164.0 / 255.0, 233.0 / 255.0, 1.0, 1);\n  gl.enable(gl.DEPTH_TEST);\n\n  const flat = new ShaderProgram([\n    new Shader(gl.VERTEX_SHADER, require('./shaders/flat-vert.glsl')),\n    new Shader(gl.FRAGMENT_SHADER, require('./shaders/flat-frag.glsl')),\n  ]);\n\n  function processKeyPresses() {\n    // Use this if you wish\n  }\n\n  // This function will be called every frame\n  function tick() {\n    camera.update();\n    stats.begin();\n    \n    gl.viewport(0, 0, window.innerWidth, window.innerHeight);\n    renderer.clear();\n    processKeyPresses();\n\n    // pass camera information to buffer\n    flat.setEyeRefUp(camera.controls.eye, camera.controls.center, camera.controls.up);\n    flat.setDimensions(window.innerWidth, window.innerHeight);\n    flat.setTime(time);\n\n    renderer.render(camera, flat, [\n      square,\n    ], time);\n    time++;\n    stats.end();\n\n    // Tell the browser to call `tick` again whenever it renders a new frame\n    requestAnimationFrame(tick);\n  }\n\n  window.addEventListener('resize', function() {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    camera.setAspectRatio(window.innerWidth / window.innerHeight);\n    camera.updateProjectionMatrix();\n    flat.setDimensions(window.innerWidth, window.innerHeight);\n  }, false);\n\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  camera.setAspectRatio(window.innerWidth / window.innerHeight);\n  camera.updateProjectionMatrix();\n  flat.setDimensions(window.innerWidth, window.innerHeight);\n\n  // Start the render loop\n  tick();\n}\n\nmain();\n","import {vec3, vec4} from 'gl-matrix';\nimport Drawable from '../rendering/gl/Drawable';\nimport {gl} from '../globals';\n\nclass Square extends Drawable {\n  indices: Uint32Array;\n  positions: Float32Array;\n  center: vec4;\n\n  constructor(center: vec3) {\n    super(); // Call the constructor of the super class. This is required.\n    this.center = vec4.fromValues(center[0], center[1], center[2], 1);\n  }\n\n  create() {\n\n  this.indices = new Uint32Array([0, 1, 2,\n                                  0, 2, 3]);\n  this.positions = new Float32Array([-1, -1, 0.999, 1,\n                                     1, -1, 0.999, 1,\n                                     1, 1, 0.999, 1,\n                                     -1, 1, 0.999, 1]);\n\n    this.generateIdx();\n    this.generatePos();\n\n    this.count = this.indices.length;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.bufIdx);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.bufPos);\n    gl.bufferData(gl.ARRAY_BUFFER, this.positions, gl.STATIC_DRAW);\n\n    console.log(`Created square`);\n  }\n};\n\nexport default Square;\n","import {gl} from '../../globals';\n\nabstract class Drawable {\n  count: number = 0;\n\n  bufIdx: WebGLBuffer;\n  bufPos: WebGLBuffer;\n\n  idxBound: boolean = false;\n  posBound: boolean = false;\n\n  abstract create() : void;\n\n  destory() {\n    gl.deleteBuffer(this.bufIdx);\n    gl.deleteBuffer(this.bufPos);\n  }\n\n  generateIdx() {\n    this.idxBound = true;\n    this.bufIdx = gl.createBuffer();\n  }\n\n  generatePos() {\n    this.posBound = true;\n    this.bufPos = gl.createBuffer();\n  }\n\n  bindIdx(): boolean {\n    if (this.idxBound) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.bufIdx);\n    }\n    return this.idxBound;\n  }\n\n  bindPos(): boolean {\n    if (this.posBound) {\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.bufPos);\n    }\n    return this.posBound;\n  }\n\n  elemCount(): number {\n    return this.count;\n  }\n\n  drawMode(): GLenum {\n    return gl.TRIANGLES;\n  }\n};\n\nexport default Drawable;\n"],"names":["module","exports","element","options","document","body","limits","Infinity","distanceLimits","zoomMin","zoomMax","view","createView","center","up","eye","mode","pmatrix","distance","width","clientWidth","height","clientHeight","camera","delay","rotateSpeed","zoomSpeed","translateSpeed","flipX","flipY","modes","tick","t","now","this","idle","flush","ctime","recalcMatrix","allEqual","matrix","computedMatrix","i","sizeChanged","Math","exp","computedRadius","lookAt","lastT","rotate","pitch","yaw","roll","pan","dx","dy","dz","translate","Object","defineProperties","get","set","mat","setMatrix","enumerable","getMode","setMode","computedCenter","ncenter","computedEye","neye","computedUp","nup","d","setDistance","getDistanceLimits","v","setDistanceLimits","addEventListener","ev","preventDefault","lastX","lastY","lastMods","shift","control","alt","meta","handleInteraction","buttons","x","y","mods","scale","drot","PI","kzoom","window","innerHeight","mouseChange","xy","mouseOffset","changedTouches","hasPassive","passive","mouseWheel","abs","innerWidth","turntable","createTurntable","orbit","createOrbit","createMatrix","ViewController","controllers","_controllerNames","keys","_controllerList","map","n","_mode","_active","proto","prototype","a0","cc","length","a1","a2","a3","getDistance","out","idx","indexOf","prev","next","max","ge","a","c","l","h","m","undefined","gt","lt","le","eq","p","norm","f","p0","v0","p1","v1","ti","t2","ti2","h00","h10","h01","h11","Array","derivative","dh00","dh10","dh01","dh11","initState","initVelocity","initTime","arguments","FilteredVector","zero","getZero","Error","cubicHermite","bsearch","clamp","lo","hi","min","state0","velocity0","t0","dimension","bounds","_state","slice","reverse","_velocity","_time","_scratch","result","splice","curve","time","state","velocity","ptr","tf","dt","x0","x1","steady","dcurve","stable","jump","push","j","sf","xc","move","statePtr","Float32Array","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","xz","yz","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","identity","y0","y1","z0","z1","len","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","sqrt","b","b0","b1","b2","b3","rad","axis","s","b12","b20","b21","b22","sin","cos","omega","cosom","sinom","scale0","scale1","ax","ay","az","aw","bx","by","bz","bw","acos","isBrowser","supported","opts","defineProperty","removeEventListener","e","detect","normalize","create","clone","determinant","invert","transpose","vec3","dot","cross","tmp","perspectiveMatrix","tmpVec4","row","pdum3","combine","scale2","translation","skew","perspective","quaternion","mat4x4","mat3from4","m44","lerp","recompose","decompose","slerp","state1","start","end","alpha","r0","r1","mat4","multiply","fromRotationTranslation","temp","m4interp","invert44","rotateX","rotateY","rotateZ","DEFAULT_CENTER","MatrixCameraController","initialMatrix","_components","prevMatrix","nextMatrix","computedInverse","_limits","tidx","comps","imat","radius","mc","d2","pow","log","tvec","lim","callback","buttonState","attached","updateMods","changed","altKey","shiftKey","ctrlKey","metaKey","handleEvent","nextButtons","nextX","mouse","nextY","clearState","handleBlur","handleMods","handleMouseMove","handleMouseDown","handleMouseUp","attachListeners","enabled","rootPosition","left","top","target","currentTarget","srcElement","isArray","cx","clientX","cy","clientY","rect","getBoundingClientRect","mouseElement","which","button","offsetX","offsetY","toPX","noScroll","lineHeight","listener","deltaX","deltaY","deltaZ","deltaMode","rx","ry","rz","ux","uy","uz","fx","fy","fz","tr","rotation","call","normalize4","OrbitCameraController","filterVector","mat4FromQuat","quatFromFrame","len3","len4","al","initQuat","initCenter","initRadius","computedRotation","quat","rr","getMatrix","ul","ru","rl","fu","fr","fl","vx","vy","vz","qx","qy","qz","bl","cz","cw","cl","r","toJSON","fromJSON","str","String","num","parseFloat","match","g","performance","Date","createElement","appendChild","dom","children","style","display","cssText","o","Panel","self","memory","REVISION","addPanel","showPanel","begin","update","usedJSHeapSize","jsHeapSizeLimit","domElement","round","devicePixelRatio","u","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","drawImage","parseUnit","PIXELS_PER_INCH","getSizeBrutal","getPropertyInPX","prop","parts","getComputedStyle","getPropertyValue","unit","testDIV","size","removeChild","trim","toLowerCase","isNaN","px","right","findOrthoPair","theta","phi","normalize3","toward","ut","dot3","rt","TurntableController","rotateM","clamp1","vv","uv","angle","computedRight","computedAngle","computedToward","minDist","maxDist","uu","ur","ctheta","stheta","cphi","sphi","sx","sy","sz","zAxis","dtheta","dphi","droll","axes","noSnap","ushift","vshift","am","ex","ey","ez","cr","cf","tu","atan2","tx","ty","tz","asin","gs","tl","angleState","lastTheta","lastPhi","dp","d0","dn","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","globalThis","Function","gl","EPSILON","ARRAY_TYPE","fromValues","add","setGL","_gl","random","hypot","constructor","canvas","setClearColor","clearColor","setSize","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","render","prog","drawables","setEyeRefUp","controls","setTime","viewProj","projectionMatrix","viewMatrix","setViewProjMatrix","drawable","draw","CameraControls","activeProgram","Shader","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","shaders","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attrPos","getAttribLocation","unifEye","getUniformLocation","unifRef","unifUp","unifDimensions","unifTime","unifViewProj","use","useProgram","ref","uniform3f","setDimensions","uniform2f","uniform1f","vp","uniformMatrix4fv","bindPos","enableVertexAttribArray","vertexAttribPointer","FLOAT","bindIdx","drawElements","drawMode","elemCount","UNSIGNED_INT","disableVertexAttribArray","Stats","square","loadScene","count","idxBound","posBound","destory","deleteBuffer","bufIdx","bufPos","generateIdx","createBuffer","generatePos","bindBuffer","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","TRIANGLES","super","indices","Uint32Array","positions","bufferData","STATIC_DRAW","console","key","stats","position","getElementById","alert","fovy","aspectRatio","near","far","direction","setAspectRatio","updateProjectionMatrix","aspect","nf","tan","renderer","enable","DEPTH_TEST","flat","VERTEX_SHADER","FRAGMENT_SHADER","viewport","requestAnimationFrame","main"],"sourceRoot":""}